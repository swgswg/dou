<style lang="less">
    .address-add{
        .each{
            position: relative;
            /*width: 100%;*/
            border-bottom: 1rpx solid #bbb;

            .each-title{
                position: absolute;
                top: 25rpx;
                left: 0;
                font-size: 30rpx;
                color: #000;
            }

            .each-input{
                position: absolute;
                top: 25rpx;
                left: 200rpx;
                font-size: 28rpx;
                border: 0px solid #fff;
            }
        }

        .set-default{
                padding-right: 10rpx;
                box-sizing: border-box;
            }
    }
</style>

<template>
    <view class="flex-center w-percent100 address-add">
        <view class="flex-column w-percent100 border-box" style="padding:0 {{30*px2rpxHeight}}px">
            <view class="flex-start w-percent100 each" style="height:{{90*px2rpxHeight}}px;">
                <view class="each-title">收货人</view>
                <input class="each-input" value="{{consignee? consignee:''}}" style="width:{{490*px2rpxWidth}}px;" type="text" placeholder="姓名" bindinput="inputConsignee" />
            </view>

            <view class="each" style="height:{{90*px2rpxHeight}}px;">
                <view class="each-title">联系电话</view>
                <input class="each-input" value="{{mobile?mobile:''}}" style="width:{{490*px2rpxWidth}}px;" type="number" placeholder="手机号码" bindinput="inputMobile"/>
            </view>

            <view class="each" style="height:{{90*px2rpxHeight}}px;">
                <view class="each-title">收件地区</view>
                <picker  class="each-input" mode="region" bindchange="bindRegionChange" value="{{region}}">
                    <view class="picker">
                        {{region[0]}} {{region[1]}} {{region[2]}}
                    </view>
                </picker>
            </view>

            <view class="each" style="height:{{90*px2rpxHeight}}px;">
                <view class="each-title">详细地址</view>
                <input class="each-input" value="{{street?street:''}}" style="width:{{490*px2rpxWidth}}px;" type="text" placeholder="如街道、小区门牌号等" bindinput="inputStreet"/>
            </view>

            <view class="flex-between w-percent100 set-default" style="height:{{90*px2rpxHeight}}px;">
                <view style="font-size: 30rpx;color: #000;">设为默认</view>
                <myswitch :activeDot.sync="status"></myswitch>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import {USER_INFO,PX_TO_RPX } from '@/utils/constant';
    import util from '@/utils/util';
    import tip from '@/utils/tip';
    import api from '@/utils/api';
    import MySwitch from '@/components/common/my_switch';

    let userId = null;

    export default class AddressAdd extends wepy.component {
        components = {
            myswitch:MySwitch,
        };

        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
        };

        props = {
            consignee:{
                default:null,
                twoWay:true,
            },
            mobile:{
                default:null,
                twoWay:true,
            },
            region:{
                default:['北京市','北京市','东城区'],
                twoWay:true,
            },
            street:{
                default:null,
                twoWay:true,
            },
            status:{
                default:0,
                twoWay:true,
            }

        };

        async onLoad(){
            let px2rpx = await wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;

            userId = wepy.getStorageSync(USER_INFO).id;
            this.$apply();
        }

        methods = {
            // 修改省市区
            bindRegionChange: function (e) {
                this.region = e.detail.value;
                this.$apply();
            },

            // 获取收货人
            inputConsignee(e){
                this.consignee = e.detail.value;
                this.$apply();
            },

            // 获取联系电话
            inputMobile(e){
                this.mobile = e.detail.value;
                this.$apply();
            },

            // 获取详细地址
            inputStreet(e){
                this.street = e.detail.value;
                this.$apply();
            },

        };

        events = {
            // 保存地址
            saveOrEdit(flag,myaddressId = null){
                // let consignee = this.consignee;
                if(util.isEmpty(this.consignee)){
                    tip.error('收货人不能为空');
                    return;
                }

                // let mobile = this.mobile;
                if(!util.checkReg(1,this.mobile)){
                    tip.error('手机号不正确');
                    return;
                }

                // let street = this.street;
                if(util.isEmpty(this.street)){
                    tip.error('详细地址不能为空');
                    return;
                }
                let site = this.region.join(' ') + ' ' + this.street;
                let data = {
                    userId: userId,
                    site: site,
                    consignee: this.consignee,
                    mobile: this.mobile,
                    status: this.status
                };
                if(flag === 'save'){
                    // 保存
                    this.saveAddress(data);
                } else if(flag === 'edit'){
                    // 修改
                    data.addressId = myaddressId;
                    this.editAddress(data);
                }
            },
        };

        // 保存地址
        async saveAddress(data){
            let res = await api.addAddress({
                query: data
            });
            if(res.data.state == 1){
                tip.toast('添加成功');
                wepy.redirectTo({
                    url:'/pages/address_list'
                });
            } else {
                tip.error('网络错误');
            }
        }

        // 修改地址
        async editAddress(data){
            let res = await api.updateAddress({
                query:data
            });
            if(res.data.state == 1){
                tip.toast('修改成功');
                wepy.redirectTo({
                    url:'/pages/address_list'
                });
            } else {
                tip.error('网络错误');
            }
        }
    }
</script>

