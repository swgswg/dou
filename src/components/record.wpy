// 历史记录模块
<style lang="less">
    .com-record{
        .flex-start{
            display: flex;
            justify-content: flex-end;
            align-items: flex-start;
        }
    }
</style>

<template>
    <view class="flex-column w-percent100 br10 com-record">
        <view class="flex-between w-percent100 border-box br10 bgcf" style="height:{{90*px2rpxHeight}}px;padding:0 {{20*px2rpxWidth}}px;">
            <view class="flex-center w-percent100">
                <image class="img" lazy-load="true" src="{{record}}" style="width:{{50*px2rpxWidth}}px;height:{{50*px2rpxWidth}}px;margin-left:{{22*px2rpxWidth}}px;"></image>
                <view class="w-percent100 f30 name" s>历史记录</view>
            </view>
            <!--<view class="flex-center head-right">-->
                <!--<image src="{{right}}" style="width:{{21*px2rpxWidth}}px;height:{{27*px2rpxWidth}}px;"></image>-->
            <!--</view>-->
        </view>
        <view class="flex-start w-percent100 f30 c3 bgcf" style="height:{{80*px2rpxHeight}}px;margin-top:{{20*px2rpxHeight}}px;">
            <view class="flex-start" style="width:{{150*px2rpxWidth}}px;">类型</view>
            <view class="flex-start" style="width:{{150*px2rpxWidth}}px;margin-left:{{80*px2rpxWidth}}px;">次数</view>
            <view class="flex-start" style="width:{{150*px2rpxWidth}}px;margin-left:{{80*px2rpxWidth}}px;">时长</view>
        </view>
        <view class="line"></view>
        <scroll-view scroll-y bindscrolltolower="scrollToLower" style="width:100%;height:{{420*px2rpxHeight}}px;background-color: #fff">
            <block wx:for="{{ranking}}" wx:for-item="rank" wx:key="{{index}}">
                <view class="flex-start w-percent100 f30 c3 bgcf" style="height:{{80*px2rpxHeight}}px;">
                    <view class="flex-start" style="width:{{150*px2rpxWidth}}px;">{{rank.status == 1 ? '抖腿' : '手动'}}</view>
                    <view class="flex-start" style="width:{{150*px2rpxWidth}}px;margin-left:{{80*px2rpxWidth}}px;">{{rank.shakeNum}}</view>
                    <view class="flex-start" style="width:{{150*px2rpxWidth}}px;margin-left:{{80*px2rpxWidth}}px;">{{rank.time}}</view>
                </view>
                <view class="line"></view>
            </block>
            <!--加载更多时动画-->
            <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
            <!--暂无数据显示-->
            <placeholder :show.sync="is_empty" message="暂无数据"></placeholder>
        </scroll-view>
    </view>

</template>

<script >
    import wepy from 'wepy';
    import api from '@/utils/api';
    import tip from '@/utils/tip';
    import imgApi from '@/utils/imgApi';
    import {PX_TO_RPX } from '@/utils/constant';
    import BottomLoadMore from "@/components/common/bottomLoadMore";
    import Placeholder from "@/components/common/placeholder";

    export default class Record extends wepy.component {
        components = {
            bottomLoadMore: BottomLoadMore,
            placeholder: Placeholder
        };

        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
            right:imgApi.right,
            record:imgApi.record,
            uploadFileUrl: api.uploadFileUrl,
            ranking:[],
            is_empty: false,
            showLoading: false,
            page:1,
            pageSize:30,
            isLastPage:false,
        };

        props  = {
            userId:{
                type:Number,
                default:'null'
            },
        };

        async onLoad(){
            let px2rpx = await wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;

            this.getData(this.page,this.pageSize);

            this.$apply();
        };

        methods = {
            // 滚动到底部/右边，会触发 scrolltolower 事件
            scrollToLower(){
                if(this.isLastPage){
                    return;
                }
                this.showLoading = true;
                let page = this.page + 1;
                let pageSize = this.pageSize;
                this.getData(page,pageSize);
            },
        };

        // 获取数据
        async getData(mypage,mypageSize){
            let that = this;
            let res = await api.getRecord({
                query:{
                    userId:that.userId,
                    page:mypage,
                    pageSize:mypageSize
                }
            });
            if(res.data.state == 1){
                let rankingData = this.ranking;
                let ranking = res.data.data.PageInfo.list;
                if(ranking.length <= 0){
                    this.is_empty = true;
                } else {
                    this.is_empty = false;
                }
                this.ranking = rankingData.concat(ranking);
                this.isLastPage = res.data.data.PageInfo.isLastPage;
                this.page = mypage;
                this.pageSize = mypageSize;
            } else {
                tip.error('网络错误');
            }
            this.showLoading = false;
            this.$apply();
        };
    }

</script>

