// components--订单
<style lang="less">
    .order-item{

        .infomation{
            border-bottom: 1rpx solid #f0f0f0;

            .name-price{
                display: flex;
                justify-content: space-between;
                align-items: flex-start;

                .price{
                    align-items: flex-end;
                    color:#f03e3e;
                }
            }
            .specific{
                /*white-space: nowrap;*/
                overflow: hidden;
                text-overflow: ellipsis;
            }
        }

        .heji{
            border-bottom: 1rpx solid #ddd;
        }

        .status-btn{
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 24rpx;
            color: #aaa;
            border: 1rpx solid #ccc;
        }
        .status-btn2{
            border: 1rpx solid #f03e3e;
            color: #f03e3e;
        }
    }
</style>

<template>
    <view class="flex-column-center w-percent100 order-item">
        <block wx:for="{{orderList}}" wx:for-item="order" wx:key="{{order.id}}">
            <view class="flex-column w-percent100 border-box bgcf" style="padding:0 {{30*px2rpxWidth}}px;margin-top:{{20*px2rpxHeight}}px;">

                <!--商品信息 start-->
                <!--<block wx:for="{{goods}}" wx:for-item="goods" wx:key="{{goods.goodsId}}">-->
                    <view class="flex-start w-percent100 infomation" style="padding:{{20*px2rpxHeight}}px 0;" data-orderid="{{order.id}}" @tap.stop="goToDetail">
                        <view class="flex-center" style="width:{{150*px2rpxWidth}}px;">
                            <image src="{{fileUrl + order.photo}}" lazy-load="true" style="width:{{150*px2rpxWidth}}px;height:{{150*px2rpxWidth}}px;"></image>
                        </view>
                        <view class="flex-column w-percent100" style="width:{{480*px2rpxWidth}}px;height:{{150*px2rpxWidth}}px;margin-left:{{26*px2rpxWidth}}px;">
                            <view class="w-percent100 name-price">
                                <view class="f32 c0">{{order.goodsName}}</view>
                                <view class="flex-column f30 price">
                                    <view><text style="font-size:22rpx" wx:if="{{order.integral}}">{{order.integral}}积分+</text>¥{{order.money}}</view>
                                    <view style="font-size:20rpx">
                                        <block wx:if="{{order.status === unpaid}}">待兑换</block>
                                        <block wx:if="{{order.status === notDelivered}}">待发货</block>
                                        <block wx:if="{{order.status === notReceived}}">已发货</block>
                                        <block wx:if="{{order.status === accomplish}}">交易完成</block>
                                        <block wx:if="{{order.status === returnGoods}}">已退货</block>
                                        <block wx:if="{{order.status === exchangeGoods}}">已换货</block>
                                        <block wx:if="{{order.status === cancelOrder}}">订单已取消</block>
                                    </view>
                                </view>
                            </view>
                            <!--<view class="flex-start w-percent100 f24 c6  specific" style="height:{{35*px2rpxHeight}};margin-top:{{10*px2rpxHeight}}px;">商品规格商品规格商品规格商品规格商品规格商品规格</view>-->
                            <!--<view class="flex-start w-percent100 f24 c6  specific" style="height:{{35*px2rpxHeight}};margin-top:{{10*px2rpxHeight}}px;"></view>-->
                            <view class="flex-end f24 ca" style="margin-top:{{20*px2rpxHeight}}px;">x{{order.num}}</view>
                        </view>
                    </view>
                <!--</block>-->
                <!--商品信息 end-->

                <view class="flex-end w-percent100 f24 ca heji" style="height:{{80*px2rpxHeight}}px;">
                    <!--<view>共1件商品 合计:¥198.00(含运费¥0.00)</view>-->
                    <view>共1件商品 合计:¥{{order.moneys}}(含运费¥0.00)</view>
                </view>

                <!--订单状态 start-->
                <view class="flex-end w-percent100" style="height:{{80*px2rpxHeight}}px;">

                    <!--0未付款 start-->
                    <block wx:if="{{order.status == unpaid}}">
                        <view class="status-btn" style="width:{{140*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;margin-left:{{30*px2rpxWidth}}px;border-radius:{{20*px2rpxHeight}}px;" data-orderid="{{order.id}}" @tap.stop="cancellationOfOrder">取消订单</view>
                        <view class="status-btn status-btn2"
                              style="width:{{140*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;margin-left:{{30*px2rpxWidth}}px;border-radius:{{20*px2rpxHeight}}px;"
                              data-orderid="{{order.id}}"
                              data-orderuuid="{{order.order_uuid}}"
                              data-moneys="{{order.moneys}}"
                              data-goodsname="{{order.goodsName}}"
                              @tap.stop="goPay">
                            付款
                        </view>
                    </block>
                    <!--0未付款 end-->

                    <!--1待发货 start-->
                    <block wx:if="{{order.status == notDelivered}}">
                        <view class="status-btn" style="width:{{140*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;margin-left:{{30*px2rpxWidth}}px;border-radius:{{20*px2rpxHeight}}px;" data-orderid="{{order.id}}" @tap.stop="cancellationOfOrder">取消订单</view>
                        <view class="status-btn status-btn2" style="width:{{140*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;margin-left:{{30*px2rpxWidth}}px;border-radius:{{20*px2rpxHeight}}px;" data-orderid="{{order.id}}" @tap.stop="reminderDelivery">提醒发货</view>
                    </block>
                    <!--1待发货 end-->

                    <!--2待收货 start-->
                    <block wx:if="{{order.status == notReceived}}">
                        <view class="status-btn" style="width:{{140*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;margin-left:{{30*px2rpxWidth}}px;border-radius:{{20*px2rpxHeight}}px;" data-order_uuid="{{order.order_uuid}}" @tap.stop="checkLogistics">查看物流</view>
                        <view class="status-btn status-btn2" style="width:{{140*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;margin-left:{{30*px2rpxWidth}}px;border-radius:{{20*px2rpxHeight}}px;" data-orderid="{{order.id}}" @tap.stop="confirmationOfReceipt">确认收货</view>
                    </block>
                    <!--2待收货 end-->

                    <!--3完成 start-->
                    <block wx:if="{{order.status == accomplish}}">
                        <view class="status-btn" style="width:{{140*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;margin-left:{{30*px2rpxWidth}}px;border-radius:{{20*px2rpxHeight}}px;" data-orderid="{{order.id}}" data-index="{{index}}" @tap.stop="deleteOneOrder">删除</view>
                        <view class="status-btn status-btn2" style="width:{{140*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;margin-left:{{30*px2rpxWidth}}px;border-radius:{{20*px2rpxHeight}}px;" data-orderid="{{order.id}}" @tap.stop="applyAfterSale">申请售后</view>
                    </block>
                    <!--3完成 end-->

                    <!--4退货 start-->
                    <block wx:if="{{order.status == returnGoods}}">
                        <view class="status-btn" style="width:{{140*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;margin-left:{{30*px2rpxWidth}}px;border-radius:{{20*px2rpxHeight}}px;" data-orderid="{{order.id}}" data-index="{{index}}" @tap.stop="deleteOneOrder">删除</view>
                        <view class="status-btn" style="width:{{140*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;margin-left:{{30*px2rpxWidth}}px;border-radius:{{20*px2rpxHeight}}px;">售后/退货</view>
                    </block>
                    <!--4退货 end-->

                    <!--5换货 start-->
                    <block wx:if="{{order.status == exchangeGoods}}">
                        <view class="status-btn" style="width:{{140*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;margin-left:{{30*px2rpxWidth}}px;border-radius:{{20*px2rpxHeight}}px;" data-orderid="{{order.id}}" data-index="{{index}}" @tap.stop="deleteOneOrder">删除</view>
                        <view class="status-btn" style="width:{{140*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;margin-left:{{30*px2rpxWidth}}px;border-radius:{{20*px2rpxHeight}}px;">售后/换货</view>
                    </block>
                    <!--5换货 end-->

                    <!--6订单取消 start-->
                    <block wx:if="{{order.status == cancelOrder}}">
                        <view class="status-btn" style="width:{{140*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;margin-left:{{30*px2rpxWidth}}px;border-radius:{{20*px2rpxHeight}}px;" data-orderid="{{order.id}}" data-index="{{index}}" @tap.stop="deleteOneOrder">删除</view>
                        <view class="status-btn" style="width:{{140*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;margin-left:{{30*px2rpxWidth}}px;border-radius:{{20*px2rpxHeight}}px;">订单已取消</view>
                    </block>
                    <!--6订单取消 end-->

                </view>
                <!--订单状态 end-->
            </view>
        </block>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import {PX_TO_RPX,USER_INFO } from '@/utils/constant';
    import api from '@/utils/api';
    import tip from '@/utils/tip';
    import imgApi from '@/utils/imgApi';
    import weixin from '@/utils/weixin';

    export default class OrderItem extends wepy.component {

        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
            fileUrl:imgApi.fileUrl,
            // ''(全部) 0（未支付）1（待发货）2（待接收）3（完成）4（退）5（换）6(取消订单)
            all:api.all,
            unpaid:api.unpaid,
            notDelivered:api.notDelivered,
            notReceived:api.notReceived,
            accomplish:api.accomplish,
            returnGoods:api.returnGoods,
            exchangeGoods:api.exchangeGoods,
            cancelOrder:api.cancelOrder,
            deleteOrder:api.deleteOrder,
        };

        props = {
            orderList: {
                type:Array,
                default: [],
            }
        };

        async onLoad(){
            let px2rpx = await wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;


            this.$apply();
        };

        methods = {
            // 前去订单详情
            goToDetail(e){
                let orderId = e.currentTarget.dataset.orderid;
                wx.navigateTo({
                    url:'/pages/order_detail?orderId='+orderId
                });
            },

            // 取消订单
            cancellationOfOrder(e){
                let orderId = e.currentTarget.dataset.orderid;
                this.editOrdersStatus(orderId,this.cancelOrder,'取消订单');
            },

            // 付款
            goPay(e){
                let that = this;
                let orderId = e.currentTarget.dataset.orderid;
                let order_uuid = e.currentTarget.dataset.orderuuid;
                let moneys = e.currentTarget.dataset.moneys;
                let openid = wepy.getStorageSync(USER_INFO).weChat;
                let body = e.currentTarget.dataset.goodsname;
                weixin.weixinPay(moneys,order_uuid,openid,body,function(res) {
                    console.log('付款成功');
                    console.log(res);
                    that.editOrdersStatus(orderId,that.accomplish,'付款成功');
                },function() {

                });
            },

            // 提醒发货
            reminderDelivery(e){
                let orderId = e.currentTarget.dataset.orderid;
                tip.toast('提醒买家成功');
            },

            // 查看物流
            checkLogistics(e){
                let orderUUID = e.currentTarget.dataset.order_uuid;
                wx.navigateTo({
                    url:'/pages/check_logistics?orderUUID='+orderUUID
                });
            },

            // 确认收货
            confirmationOfReceipt(e){
                let that= this;
                let orderId = e.currentTarget.dataset.orderid;
                wx.showModal({
                    title: '温馨提示',
                    content: '请确定您已经收到货物',
                    success: function(res) {
                        if (res.confirm) {
                            that.editOrdersStatus(orderId,that.notDelivered,'收货成功');
                        }
                    }
                });
            },

            // 删除订单
            deleteOneOrder(e){
                let that = this;
                let orderId = e.currentTarget.dataset.orderid;
                let index = e.currentTarget.dataset.index;
                wx.showModal({
                    title: '温馨提示',
                    content: '订单删除不可恢复',
                    success: function(res) {
                        if (res.confirm) {
                            that.delOneOrders(orderId,index);
                        }
                    }
                });
            },

            // 申请售后
            applyAfterSale(){
                this.$emit('apply_after_sale');
            },
        };

        // 修改订单状态
        async editOrdersStatus(myorderId,mystatus,msg){
            let res = await api.updateOrdersStatus({
                query:{
                    orderId:myorderId,
                    status:mystatus
                }
            });
            if(res.data.state == 1){
                tip.toast(msg);
                // 刷新数据
                this.$emit('refreshOrderList');
            } else {
                tip.error('网络错误');
            }
            this.$apply();
        };

        // 删除订单
        async delOneOrders(myordersId,index){
            let res = await api.delOrders({
                query:{
                    ordersId:myordersId
                }
            });
            if(res.data.state == 1){
                tip.toast('删除成功');
                this.deleteOneData(index);
            } else {
                tip.error('网络错误');
            }
        };

        // 删除数组中指定下标的数据
        deleteOneData(index){
            this.orderList.splice(index,1);
            this.$apply();
        }
    }
</script>

