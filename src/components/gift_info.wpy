<template>
    <view class="w-percent100 h-percent100 gift-info">
        <scroll-view scroll-y bindscrolltolower="scrollToLower">
            <block wx:for="{{giftInfo}}" wx:for-item="giftInfo" wx:key="{{index}}">
                <view class="flex-around w-percent100 bgcf gift-info-each" style="margin-bottom:{{20*px2rpxHeight}}px">
                    <view class="flex-start left">
                        <view class="flex-center" style="width:{{150*px2rpxWidth}}px;height:{{150*px2rpxHeight}}px;">
                            <image style="width:{{120*px2rpxWidth}}px;height:{{120*px2rpxWidth}}px;" lazy-load="true" src="{{fileUrl + giftInfo.photo}}"></image>
                        </view>
                        <view class="left-info" style="width:{{150*px2rpxWidth}}px;height:{{150*px2rpxHeight}}px;margin-left:{{20*px2rpxHeight}}px">
                            <view class="flex-start w-percent100 f30 ellipsis gift-name">{{giftInfo.name}}</view>
                            <view class="energy">
                                <image style="width:{{21*px2rpxWidth}}px;height:{{26*px2rpxHeight}}px;margin-right:{{10*px2rpxHeight}}px" lazy-load="true" src="{{energy}}"></image>
                                <view>{{giftInfo.score}}</view>
                            </view>
                        </view>
                    </view>
                    <view class="flex-between right" style="height:{{150*px2rpxHeight}}px">
                        <view class="gift-code" style="margin-top:{{29*px2rpxHeight}}px">
                            <image style="width:{{30*px2rpxWidth}}px;height:{{29*px2rpxHeight}}px;margin-right:{{8*px2rpxHeight}}px" lazy-load="true" src="{{shake_code}}"></image>
                            <view>{{giftInfo.integral}}</view>
                        </view>
                        <view class="btn">
                            <input class="btn1" value="{{giftInfo.val}}" type="number" bindinput="buyNumber" data-giftid="{{giftInfo.id}}" data-integral="{{giftInfo.integral}}"  placeholder="购买数量" style="width:{{120*px2rpxWidth}}px;height:{{50*px2rpxHeight}}px;" />
                            <view class="btn2" style="width:{{120*px2rpxWidth}}px;height:{{50*px2rpxHeight}}px;" data-giftid="{{giftInfo.id}}" data-index="{{index}}" @tap.stop="buy">兑换</view>
                        </view>
                    </view>
                </view>
            </block>
            <!--加载更多时动画-->
            <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
            <!--暂无数据显示-->
            <placeholder :show.sync="is_empty" message="暂无数据"></placeholder>
        </scroll-view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import {USER_INFO, PX_TO_RPX } from '@/utils/constant';
    import imgApi from '@/utils/imgApi';
    import api from '@/utils/api';
    import util from '@/utils/util';
    import calculate from '@/utils/calculate';
    import tip from '@/utils/tip';
    import weixin from '@/utils/weixin';
    import BottomLoadMore from "@/components/common/bottomLoadMore";
    import Placeholder from "@/components/common/placeholder";

    let userId = null;
    let page = 1;
    let pageSize = 20;
    let isLastPage = false;

    export default class GiftInfo extends wepy.component {

        components = {
            bottomLoadMore: BottomLoadMore,
            placeholder: Placeholder
        };

        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
            fileUrl:imgApi.fileUrl,
            energy: imgApi.energy,
            shake_code: imgApi.shake_code,
            // 礼物信息
            giftInfo:[],
            // 购买的礼物
            // buyGift:{},// {id:,number:,},
            //是否显示 底部loading
            showLoading: false,
            // 数据是否为空
            is_empty: true,
        };

        props = {
            integral:{
                twoWay:true
            }
        };

        async onLoad(){
            // 获取屏幕尺寸适配
            let px2rpx = await wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;

            // 获取用户信息
            userId = wepy.getStorageSync(USER_INFO).id;
            this.$apply();

            //获取礼物
            this.getGift();
        };

        methods = {
            //滚动到底部/右边，会触发 scrolltolower 事件
            scrollToLower(){
                if(isLastPage){
                    tip.toast('这是最后一页了','none');
                    return;
                }
                this.getGift();
                page++;
            },

            // 购买的数量
            buyNumber(e){
                let id = e.currentTarget.dataset.giftid;
                // let integral = e.currentTarget.dataset.integral;
                let val = e.detail.value;
                let gift = this.giftInfo;
                let len = gift.length;
                for(let i = 0; i < len; i++){
                    if(gift[i].id == id){
                        gift[i].val = val;
                    }
                }
                this.giftInfo = gift;
                this.$apply();
            },

            // 购买(积分兑换)
            async buy(e){
                let that = this;
                let id = e.currentTarget.dataset.giftid;
                let index = e.currentTarget.dataset.index;
                // 购买所需的积分
                let sumIntegral = 0;
                // 当前要购买的礼物
                let gift = this.giftInfo[index];
                let val = parseInt(gift.val);
                let integral = parseInt(gift.integral);
                // 大于0的数字
                if(/\d/.test(val) && val > 0){
                    sumIntegral = calculate.calcMul(val, integral);
                    // 判断用户的积分是否足够
                    if(sumIntegral >= that.integral){
                        tip.toast('您的积分不足','none');
                        return;
                    }
                    // 积分兑换
                    let res = await api.convertGift({
                        query:{
                            userId: userId,
                            giftId:id,
                            num: val,
                            integral:sumIntegral
                        }
                    });
                    if(res.data.state == 1){
                        // 获取抖腿币,更新个人信息
                        that.getIntegral();
                        tip.toast('兑换成功');
                    }
                } else {
                    tip.error('请填写正确信息');
                }
            },
        };

        // 获取礼物
        async getGift(){
            this.showLoading = true;
            let res = await api.getGift({
                query:{
                    isUse:1,
                    page:page,
                    pageSize:pageSize,
                }
            });
            if(res.data.state == 1){
                // 获取礼物信息
                let giftInfo = this.giftInfo;
                if(util.isEmpty(giftInfo)){
                    // 如果礼物信息为空
                    giftInfo = [];
                }
                let gift = res.data.data.PageInfo.list;
                let len = gift.length;
                for(let i = 0; i < len; i++){
                    gift[i].val = '';
                }
                giftInfo = giftInfo.concat(gift);
                this.giftInfo = giftInfo;
                // 是否是最后一页
                isLastPage = res.data.data.PageInfo.isLastPage;
                if(giftInfo.length < 1){
                    this.is_empty = true;
                } else {
                    this.is_empty = false;
                }
            } else {
                tip.error('网络错误');
            }
            this.showLoading = false;
            this.$apply();
        };

        // 获取抖腿币,更新个人信息
        async getIntegral(){
            let res = await api.getIntegral({
                query:{
                    userId: userId
                }
            });
            if(res.data.state == 1){
                let integral = res.data.data.integral;
                this.integral = integral;
                // userInfo.integral = integral;
                this.$apply();
                // 更新缓存
                // weixin.updateStorage('integral', integral);
                weixin.updateUserInfo();
            }
        };

    }
</script>

<style lang="less">
    .gift-info{
        display: flex;
        padding: 20rpx 20rpx 0 20rpx;
        box-sizing: border-box;

        .gift-info-each{

            .left{
                width: 60%;

                .left-info{
                    display: flex;
                    flex-direction: column;
                    justify-content:flex-start;
                    align-items: center;

                    .gift-name{
                        height: 50%;
                    }

                    .energy{
                        display: flex;
                        justify-content: flex-start;
                        align-items: flex-start;
                        width: 100%;
                        height: 40%;
                        font-size: 25rpx;
                    }
                }
            }

            .right{
                width: 40%;

                .gift-code{
                    display: flex;
                    justify-content: flex-start;
                    align-items: flex-start;
                    width: 45%;
                    height: 100%;

                    view{
                        font-size: 30rpx;
                        color: #ffc849;
                    }
                }

                .btn{
                    display: flex;
                    flex-direction: column;
                    justify-content: flex-start;
                    align-items: center;
                    width: 50%;

                    .btn1,.btn2{
                        display: flex;
                        justify-content: center;
                        align-items: center;
                        font-size: 25rpx;
                        border: 1rpx solid #ec2c98;
                        border-radius: 10rpx;
                    }

                    .btn1{
                        text-align: center;
                        margin-bottom: 20rpx;
                        color: #333;
                        background-color: #fff;
                    }
                    .btn2{
                        color: #fff;
                        background: linear-gradient(to top right,#ec2c98, #f68668);
                    }
                }
            }
        }
    }
</style>