<template>
    <view class="flex flex-center change-number">
        <view class="flex flex-center change-number-content" style="width:{{200*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;">
            <view class="flex flex-center br5 reduce"
                  style="width:{{40*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;"
                  @tap.stop="jian"
            >
                <text class="iconfont icon-move" style="margin-top:{{5*px2rpxHeight}}px"></text>
            </view>
            <view class="flex flex-center f24 br5 input" style="width:{{83*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;margin:0 {{15*px2rpxWidth}}px">
                <input style="width:{{83*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;"
                       type="number"
                       value="{{num}}"
                       bindinput="changNum" />
            </view>
            <view class="flex flex-center br5 add"
                  style="width:{{40*px2rpxWidth}}px;height:{{40*px2rpxHeight}}px;"
                  @tap.stop="jia"
            >
                <text class="iconfont icon-add" style="margin-top:{{5*px2rpxHeight}}px"></text>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import {PX_TO_RPX} from '@/utils/constant';
    import util from '@/utils/util';
    import tip from '@/utils/tip';

    export default class ChangeNumber extends wepy.component {

        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
        };

        props = {
            num:{
                type:Number,
                default:1,
                twoWay:true,
            }
        };

        async onLoad(){
            let px2rpx = await wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;
            this.$apply();
        }

        methods = {
            // 减数量
            jian(){
                let num = parseInt(this.num);
                num--;
                if(num < 1){
                    num = 1;
                }
                this.num = num;
            },

            // 加数量
            jia(){
                this.num = parseInt(this.num) + 1;
            },

            // input直接写数量
            changNum(e){
                let num = e.detail.value;
                if(util.checkReg(6,num)){
                    this.num = num;
                } else {
                    this.num = 1;
                    tip.error('请输入正确数量');
                }
                this.$apply();
            },
        };

    }
</script>

<style lang="less">
    .change-number{

        .change-number-content{

            .reduce,.add{
                font-size: 50rpx;
                color: #f03e3e;
                border: 1rpx solid red;
                /*border-radius: 5rpx;*/
            }

            .input{
                border: 1rpx solid red;
                /*border-radius: 5rpx;*/

                input{
                    text-align: center;
                }
            }

        }

    }
</style>