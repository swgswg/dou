// 选择倒计时时间模块
<style lang="less">
    .select-time{
        .num{
            font-size: 100rpx;
        }

    }
</style>

<template>
    <view class="flex-around w-percent100 h-percent100 select-time">
        <picker mode="multiSelector" bindchange="changeTime" value="{{selectTimeIndex}}" range="{{selectTimeArray}}" disabled="{{!timeConfirm}}">
            <view class="flex-between w-percent100 h-percent100 cec2c98">
                <view class="flex-center num" style="padding-right:{{20*px2rpxWidth}}px;">
                    <!--当前选择：{{multiArray[0][multiIndex[0]]}}，{{multiArray[1][multiIndex[1]]}}，{{multiArray[2][multiIndex[2]]}}-->
                    {{selectTimeArray[0][selectTimeIndex[0]]}}:
                </view>
                <view class="flex-center num" style="padding-right:{{20*px2rpxWidth}}px;">
                    {{selectTimeArray[1][selectTimeIndex[1]]}}:
                </view>
                <view class="flex-center num" style="padding-right:{{20*px2rpxWidth}}px;">
                    {{selectTimeArray[2][selectTimeIndex[2]]}}
                </view>
            </view>
        </picker>
        <block wx:if="{{timeConfirm}}">
            <view class="flex-center">
                <image wx:if="{{timeConfirm}}"
                       style="width:{{98*px2rpxWidth}}px;height:{{98*px2rpxHeight}}px;"
                       @tap.stop="confirmSelectTime"
                       src="{{confirm_btn}}">
                </image>
            </view>
        </block>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import imgApi from '@/utils/imgApi';
    import util from '@/utils/util';
    import {PX_TO_RPX} from '@/utils/constant';

    export default class SelectTime extends wepy.component {

        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
            confirm_btn:imgApi.confirm_btn,
            // 选择时间的数据
            selectTimeArray:[],
            isHourAnimate:false,
            isMinuteAnimate:false,
            isSecondAnimate:false,
            // 选择时间的下标
            // selectTimeIndex:[0,0,0],
            clear_set:null,

        };

        props = {
            // 倒计时确定按钮是否隐藏 true不隐藏/false隐藏
            timeConfirm:{
                type:Boolean,
                default:true,
                twoWay:true,
            },
            selectTime:{
                type:Array,
                default:true,
                twoWay:true
            },
            selectTimeIndex:{
                type:Array,
                default:[0,0,0],
                twoWay:true
            },
            // 倒计时结束(true结束)
            countdownOver:{
                type:Boolean,
                default:false,
                twoWay:true,
            }
        };

        onLoad(){
            // 获取尺寸适配
            let px2rpx = wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;

            // 时分秒范围数组
            let hour = util.arrRange(0,12,true);
            let minute = util.arrRange(0,59,true);
            let second = minute;
            this.selectTimeArray = [hour,minute,second];
            this.$apply();
        };

        methods = {
            // 选择倒计时时间
            changeTime(e){
                // console.log(e);
                this.selectTimeIndex = e.detail.value;
                this.$apply();
            },

            // 确定倒计时时间
            confirmSelectTime(){
                if(this.selectTimeIndex[0] == 0 && this.selectTimeIndex[1] == 0 && this.selectTimeIndex[2] == 0){
                    wx.showToast({
                        title: '请选择时间',
                        icon: 'none',
                        duration: 1000
                    });
                    return;
                }
                this.selectTime = [
                    this.selectTimeArray[0][this.selectTimeIndex[0]],
                    this.selectTimeArray[1][this.selectTimeIndex[1]],
                    this.selectTimeArray[2][this.selectTimeIndex[2]],
                ];
                this.timeConfirm = false;
                this.$apply();
            },
        };

        // 倒计时
        countDown(otherFun){
            let that = this;
            this.clear_set = setInterval(function() {
                let selectTimeIndex = that.selectTimeIndex;
                selectTimeIndex[2]--;
                if(selectTimeIndex[2] <= 0){
                    if(selectTimeIndex[1] <= 0){
                        if(selectTimeIndex[0] <= 0){
                            selectTimeIndex[1] = 0
                        } else {
                            selectTimeIndex[0]--;
                            selectTimeIndex[1] = 59;
                        }
                    } else {
                        selectTimeIndex[1]--;
                        selectTimeIndex[2] = 59;
                    }
                }
                that.selectTimeIndex = selectTimeIndex;
                if(selectTimeIndex[0] <= 0 && selectTimeIndex[1] <= 0 && selectTimeIndex[2] <= 0){
                    selectTimeIndex[0] = 0;
                    selectTimeIndex[1] = 0;
                    selectTimeIndex[2] = 0;
                    clearInterval(that.clear_set);
                    that.countdownOver = true;
                    that.timeConfirm = true;
                    otherFun();
                }
                that.$apply();
            },1000);

        };

        events = {
            //停止倒计时
            stopCountDown(){
                clearInterval(this.clear_set);
            },
        };


        watch = {
            selectTimeIndex(newValue,oldValue){
                console.log(newValue,oldValue);
                // if(newValue[2] != oldValue[2]){
                //     this.isSecondAnimate = true;
                // } else {
                //     this.isSecondAnimate = false;
                // }
                // if(newValue[1] != oldValue[1]){
                //    this.isMinuteAnimate = true;
                // } else {
                //     this.isMinuteAnimate = false;
                // }
                // if(newValue[0] != oldValue[0]){
                //     this.isHourAnimate = true;
                // } else {
                //     this.isHourAnimate = false;
                // }
                // this.$apply();
            }
        }

    }
</script>
