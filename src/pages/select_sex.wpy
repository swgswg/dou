<template>
    <view class="select-sex">
        <view class="sex">请选择您的性别</view>

        <view class="sex-img">
            <image src="{{currentSex == 1 ? woman_active : woman_inactive}}" data-sex= '1' @tap.stop="selectSex"></image>
            <image src="{{currentSex == 0 ? man_active : man_inactive}}" data-sex = '0' @tap.stop="selectSex"></image>
        </view>

        <view class="sex-profile">
            <block wx:for="{{profile}}" wx:for-item="profileImg" wx:key="{{index}}">
                <view class="profile-each {{currentProfile == index ? 'active':''}}">
                <image src="{{profileImg}}" data-index="{{index}}" @tap.stop="selectProfile"></image>
                <!--<image src="{{uploadFileUrl + '/static/images/' + profile}}" data-index="{{index}}" @tap.stop="selectProfile"></image>-->
            </view>
            </block>
        </view>

        <view class="sex-btn" wx:if="{{currentSex == '0' || currentSex == '1'}}">
            <button class="button button-highlight button-pill button-large" open-type="getUserInfo" bindgetuserinfo="getUserInfo">确认</button>
        </view>

    </view>
</template>

<script>
    import wepy from 'wepy';
    import api from '@/utils/api';
    import imgApi from '@/utils/imgApi';
    import tip from '@/utils/tip';
    import {USER_INFO} from '@/utils/constant';

    export default class MyPage extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: '选择性别'
        };

        // 声明页面中所引用的组件，或声明组件中所引用的子组件
        components = {};

        // 页面所需数据均需在这里声明，可用于模板数据绑定
        data = {
            // 男女性别图标
            man_active: imgApi.man_active,
            man_inactive: imgApi.man_inactive,
            woman_active: imgApi.woman_active,
            woman_inactive: imgApi.woman_inactive,

            // 选择的性别 男0女1/-1没有选择
            currentSex:-1,
            // 性别对应的人物
            profile:[],
            // 选择的人物 -1没有选择
            currentProfile:-1,
            // 小人物logo
            logo:'',
        };

        // 在Page和Component共用的生命周期函数
        onLoad() {
        };

        // 只在Page中存在的页面生命周期函数
        onShow() {
        };

        // 只在Page中存在的页面生命周期函数
        onReady() {
        };

        // 声明计算属性（详见后文介绍）
        computed = {};

        // 声明数据watcher（详见后文介绍）
        watch = {};

        // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
        methods = {
            // 选择性别
            selectSex(e){
                let sex = e.currentTarget.dataset.sex;
                this.currentSex = sex;
                // console.log(typeof (this.currentSex)+'==='+this.currentSex);
                if(sex == 0){
                    this.profile = [ imgApi.man1, imgApi.man2 ];
                } else if(sex == 1){
                    this.profile = [ imgApi.woman1, imgApi.woman2 ];
                }
                this.currentProfile = -1;
                this.$apply();
            },

            // 选择人物
            selectProfile(e){
                let index = e.currentTarget.dataset.index;
                this.currentProfile = index;
                if(this.currentSex == 0){
                    this.logo = 'man'+(index+1)+'.png';
                } else if(this.currentSex == 1){
                    this.logo = 'woman'+(index+1)+'.png';
                }
                this.$apply();
                console.log(this.logo);
            },

            // 获取用户授权信息
            async getUserInfo(e){
                let that = this;
                console.log(e);
                // 性别选择
                if(this.currentSex == -1){
                    await tip.longtoast('请选择性别');
                    return;
                }
                // 人物选择
                if(this.currentProfile == -1){
                    await tip.longtoast('请选择动漫小人物');
                    return;
                }

                if (e.detail.errMsg == 'getUserInfo:ok'){
                    // 授权成功
                    var userInfo = wepy.getStorageSync(USER_INFO);
                    // console.log(userInfo);
                    let rlt = await api.updateSex({
                        query:{
                            userId: userInfo.id,
                            sex: that.currentSex,
                            logo: that.logo,
                            name: e.detail.userInfo.nickName,
                            photo:e.detail.userInfo.avatarUrl,
                        }
                    });
                    if(rlt.data.state == 1){
                        // 获取信息成功
                        wepy.redirectTo({
                            url: '/pages/not_connected'
                        });
                    }
                } else {
                    // 授权失败
                    let res = await tip.longtoast('请重新确认授权');
                    return;
                }
            },
        };

        // 声明组件之间的事件处理函数
        events = {};
    }
</script>

<style lang="less">
    .select-sex{

        .sex{
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 50rpx;
        }

        .sex-img{
            display: flex;
            justify-content: space-around;
            align-items: center;
            margin-top: 100rpx;
            padding: 0 30rpx;
            box-sizing: border-box;

            image{
                width: 150rpx;
                height: 150rpx;
            }

        }

        .sex-profile{
            display: flex;
            justify-content: space-around;
            align-items: center;
            width: 100%;
            /*height: 455rpx;*/
            margin-top: 50rpx;

            .profile-each{
                display: flex;
                justify-content:center;
                align-items: center;
                width: 335rpx;
                height: 600rpx;
                /*padding: 36rpx auto;*/
                /*box-sizing: brder-box;*/
                /*border: 1rpx solid red;*/

                image{
                    width: 250rpx;
                    height: 446.5rpx;
                }

            }

            .active{
                /*border: 4rpx solid blue;*/
                /*box-shadow: 0 0 13rpx #80a1ee;*/

                image{
                    width: 335rpx;
                    height: 600rpx;
                }

            }
        }

        .sex-btn{
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 50rpx;
        }
    }


</style>