// page--挑战模式
<style lang="less">
    .fight{

        .num{
            font-size: 100rpx;
            font-weight: bolder;
        }

        .time{
            font-weight: bolder;
        }

    }
</style>

<template>
    <view class="pr flex-column bg-repeat-size fight"
          style="width:{{widWidth}}px;height:{{widHeight}}px;background-image: url({{bgImg}});">

        <!--退出按钮 start-->
        <view class="pa" style="top:{{35*px2rpxHeight}}px;right:{{35*px2rpxWidth}}px;">
            <outmodel></outmodel>
        </view>
        <!--退出按钮 end-->

        <!--倒计时 start-->
        <view class="flex-center w-percent100 f36 cfcf05b time" style="margin-top:{{100*px2rpxHeight}}px;">
            <view>倒计时: </view>
            <view style="width:{{200*px2rpxWidth}}px;height:{{80*px2rpxHeight}}px;margin:0 {{20*px2rpxWidth}}px;">
                <countdown :time.sync="fightTime" :timeFinish.sync="timeFinish"></countdown>
            </view>
            <view>分</view>
        </view>
        <!--倒计时 end-->

        <!--抖动次数 start-->
        <view class="flex-center w-percent100 cfcf05b f-family-edo num" style="margin-top:{{50*px2rpxHeight}}px;">
            <view>{{shakeNumber}}</view>
        </view>
        <!--抖动次数 end-->

        <!--点击按钮 start-->
        <view>
            <view class="flex-center w-percent100">
                <image src="{{btnImg}}"
                       style="width:{{317*px2rpxWidth}}px;height:{{272*px2rpxWidth}}px;"
                       @tap.stop="fight_model">
                </image>
            </view>
        </view>
        <!--点击按钮 end-->

        <!--开始按钮 start-->
        <view class="flex-center w-percent100">
            <view class="button button-highlight button-pill button-large"
                  @tap.stop="start">
                开始
            </view>
        </view>
        <!--开始按钮 end-->

        <!--商城按钮 start-->
        <view class="pa" style="bottom:{{35*px2rpxHeight}}px;right:{{35*px2rpxWidth}}px;">
            <gomall></gomall>
        </view>
        <!--商城按钮 send-->

        <!--通关奖励弹窗 start-->
        <view wx:if="{{showCoverLayer}}">
            <coverlayer>
                <view slot="content" class="pr flex-column-center bg-repeat-size"
                      style="width:{{705*px2rpxWidth}}px;height:{{735*px2rpxWidth}}px;background-image: url({{jiangli}});">
                    <!--奖励礼物 start-->
                    <view class="pa flex-center w-percent100 border">
                        <!--<image src="{{}}" style="width:{{}}px;height:{{}}px;"></image>-->
                    </view>
                    <!--奖励礼物 end-->

                    <view class="flex-center w-percent100 f30 border" style="margin:{{30*px2rpxWidth}}px 0;">
                        <view>点击</view>
                        <view style="margin:0 {{10*px2rpxWidth}}px;">
                            <gomall></gomall>
                        </view>
                        <view>购买更多礼物</view>
                    </view>

                    <view class="flex-center border">
                        <image src="{{lingqu}}"
                               style="width:{{189*px2rpxWidth}}px;height:{{96*px2rpxWidth}}px;"
                               @tap.stop="bindReceiveIncentive">
                        </image>
                    </view>
                </view>
            </coverlayer>
        </view>
        <!--通关奖励弹窗 end-->

    </view>
</template>

<script>
    import wepy from 'wepy';
    import {PX_TO_RPX,USER_INFO } from '@/utils/constant';
    import imgApi from '@/utils/imgApi';
    import api from '@/utils/api';
    import OutModel from '@/components/out_model';
    import GoMall from '@/components/go_mall';
    import CountDown from '@/components/count_down';
    import CoverLayer from '@/components/common/cover_layer';

    export default class FightModel extends wepy.page {
        config = {
            navigationBarTitleText: '挑战模式',
            disableScroll: true,
            enablePullDownRefresh:false,
        };

        components = {
            outmodel: OutModel,
            gomall: GoMall,
            countdown: CountDown,
            coverlayer: CoverLayer,
        };

        data = {
            widWidth:0,
            widHeight:0,
            px2rpxWidth:0,
            px2rpxHeight:0,
            bgImg: imgApi.fight_bg,
            btnImg:imgApi.open_btn,
            jiangli:imgApi.flight_jiangli,
            lingqu:imgApi.flight_liqu,
            // 挑战模式的倒计时时间
            fightTime:api.fightTime,
            // true倒计时结束/false倒计时没有结束
            timeFinish:true,
            shakeNumber:0,
            // true显示遮盖层/false不显示遮盖层
            showCoverLayer:false,
        };

        onLoad() {
            let px2rpx = wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;
            this.widWidth = px2rpx.originalWidth;
            this.widHeight = px2rpx.originalHeight;
            this.$apply();
        };

        onReady() {
            // 设置是否保持常亮状态。仅在当前小程序生效，离开小程序后设置失效。
            wx.setKeepScreenOn({
                keepScreenOn:true
            });
        };

        methods = {
            // 开始
            start(){
                this.timeFinish = false;
                this.$apply();
            },

            // 点击计数
            fight(){
                if(this.timeFinish){
                    return;
                }
                this.shakeNumber++;
                this.$apply();
            },

            // 领取按钮
            bindReceiveIncentive(){
                this.receiveIncentive();
            }
        };

        watch = {
            // 游戏结束弹出奖励
            timeFinish(newValue){
                if(newValue){
                    // 计时时间归位
                    this.fightTime = api.fightTime;
                    // 抖动次数清零
                    this.shakeNumber = 0;
                    this.clearanceIncentive();
                    this.$apply();
                }
            }
        };

        events = {
            // 取消遮盖层
            cancelShow(){
                this.cancelCoverlayer();
            },

            // 退出事件
            outEvents(){
                // 计时时间归位
                this.fightTime = api.fightTime;
                // 抖动次数清零
                this.shakeNumber = 0;
                // 倒计时结束
                this.timeFinish = true;
                this.$apply();
            },

            // 领取事件
            receiveEvents(){
                if(this.showCoverLayer){
                    this.receiveIncentive();
                }
            },
        };

        // 倒计时结束送出奖励
        clearanceIncentive(){
            this.showCoverLayer = true;
        }

        // 取消遮盖层
        cancelCoverlayer(){
            this.showCoverLayer = false;
            this.$apply();
        }

        // 获取通关奖励
        getIncentive(){

        }

        // 领取通关奖励
        receiveIncentive(){

        }
    }
</script>
