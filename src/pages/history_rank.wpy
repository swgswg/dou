<template>
    <view class="history-rank">

        <view class="rank-style" style="margin-top:{{10*px2rpxHeight}}px">
            <rankingstyle :rankingStyle.sync="rankingStyle" :status.sync="currentStatus"></rankingstyle>
        </view>

        <view class="tab" style="height:{{100*px2rpxHeight}}px;margin-top:{{-10*px2rpxHeight}}px">
            <rankingbutton :tab.sync="tabData" :currentRanking.sync="currentRanking"></rankingbutton>
        </view>

        <view class="rank">

            <view class="world-firend">
                <view>
                    <image class="world-img" style="width:{{290*px2rpxWidth}}px;height:{{75*px2rpxHeight}}px;" src="{{currentWorldOrFriend == 'world' ? world_active : world_inactive}}" data-type="world" @tap.stop="worldOrFried"></image>
                </view>
                <view>
                    <image class="friend-img" style="width:{{290*px2rpxWidth}}px;height:{{75*px2rpxHeight}}px;" src="{{currentWorldOrFriend == 'friend' ? friend_active : friend_inactive }}" data-type="friend" @tap.stop="worldOrFried"></image>
                </view>
            </view>

            <block wx:if="{{currentWorldOrFriend == 'world'}}">
                <!--世界 start-->
                <view style="margin-top:{{-35*px2rpxHeight}}px">
                    <rankingworld :first_three.sync="firstThreeData" :worldRanking.sync="worldRankingData" :weekOrAll.sync="weekOrAll" :status.sync="currentStatus"></rankingworld>
                </view>
                <!--世界 end-->
            </block>
            <block wx:elif="{{currentWorldOrFriend == 'friend'}}">
                <!--好友 start-->
                <view style="margin-top:{{-35*px2rpxHeight}}px">
                    <rankingfriend :friendRanking.sync="friendRankingData" :friendRankingPage.sync="friendRankingPage" :weekOrAll.sync="weekOrAll" :status.sync="currentStatus"></rankingfriend>
                </view>
                <!--好友 end-->
            </block>
        </view>
   </view>
</template>

<script>
    import wepy from 'wepy';
    import imgApi from '@/utils/imgApi';
    import {PX_TO_RPX } from '@/utils/constant';
    import RankingButton from '@/components/ranking_button';
    import RankingStyle from '@/components/ranking_style';
    import RankingWorld from '@/components/ranking_world';
    import RankingFriend from '@/components/ranking_friend';

    export default class MyPage extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: '历史排名',
            enablePullDownRefresh:false,
            disableScroll: true,
        };

        // 声明页面中所引用的组件，或声明组件中所引用的子组件
        components = {
            rankingbutton:RankingButton,
            rankingstyle:RankingStyle,
            rankingworld:RankingWorld,
            rankingfriend:RankingFriend,
        };

        // 页面所需数据均需在这里声明，可用于模板数据绑定
        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
            world_active:imgApi.world_active,
            world_inactive:imgApi.world_inactive,
            friend_active:imgApi.friend_active,
            friend_inactive:imgApi.friend_inactive,
            // 排行类型
            rankingStyle:[{name:'设备榜',status:'1'},{name:'手动榜',status:'0'}],
            // 0手/1脚
            currentStatus:'1',
            tabData:['本周排行','总排行'],
            // 当前排行类型week/all
            currentRanking: 'week',
            // 当前是世界还是好友(默认世界)
            currentWorldOrFriend: 'friend',
            // 当前排行类型1(week)/0(all)
            weekOrAll:'',
            // 前3名
            firstThreeData:[],
            // 世界排名数据
            worldRankingData:[],
            // 好友排名数据
            friendRankingData:[],
            // 好友排名数据当前页数(默认1)
            // friendRankingPage:1,
            //是否有数据
            is_empty: false,
            //是否显示 底部loading
            showLoading: false,
        };

        // 在Page和Component共用的生命周期函数
        async onLoad() {
            let px2rpx = await wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;
            this.$apply();
        };

        // 只在Page中存在的页面生命周期函数
        onShow() {
        };

        // 只在Page中存在的页面生命周期函数
        onReady() {
            // 获取数据 周+好友+设备
            this.getData('friend',1,1);
        };

        // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
        methods = {
            // 选择世界还是好友排名
            worldOrFried(e){
                let currentWorldOrFriend = e.currentTarget.dataset.type;
                // console.log(currentWorldOrFriend);
                if(this.currentWorldOrFriend == currentWorldOrFriend){
                    // 如果点击的是当前已经选择的,就不执行任何操作
                    return;
                } else {
                    let mytype = '';
                    // console.log(this.currentRanking);
                    if(this.currentRanking == 'week'){
                        // 周排行
                        mytype = 1;
                    } else if(this.currentRanking == 'all'){
                        // 总排行
                        mytype = 0;
                    }
                    //改变当前数据
                    this.getData(currentWorldOrFriend,mytype,this.currentStatus);
                    this.currentWorldOrFriend = currentWorldOrFriend;
                    this.$apply();
                }
            },
        };

        watch = {
            currentRanking(newValue){
                // console.log(newValue,oldValue);
                let currentWorldOrFriend = this.currentWorldOrFriend;
                let mytype = '';
                // console.log(currentWorldOrFriend);
                if(newValue == 'week'){
                    mytype = 1;
                } else if(newValue == 'all'){
                    mytype = 0;
                }
                //改变当前数据
                this.getData(currentWorldOrFriend,mytype,this.currentStatus);
                // 改变子组件值
                this.weekOrAll = mytype;
                this.$apply();
            },

            currentStatus(newValue){
                let mytype = '';
                if(this.currentRanking == 'week'){
                    // 周排行
                    mytype = 1;
                } else if(this.currentRanking == 'all'){
                    // 总排行
                    mytype = 0;
                }
                this.getData(this.currentWorldOrFriend,mytype,newValue);
                this.currentStatus = newValue;
                this.$apply();
            }
        };

        getData(currentWorldOrFriend,mytype,mystatus){
            if(currentWorldOrFriend == 'world'){
                // 世界排行
                this.$invoke('rankingworld', 'getWorldRanking', 1,8,mytype,mystatus);
                this.$apply();
            } else if(currentWorldOrFriend == 'friend'){
                // 好友排行
                this.$invoke('rankingfriend', 'getFriendRanking', 1,8,mytype,mystatus);
                this.$apply();
            }
        };


        // 声明组件之间的事件处理函数
        events = {};
    }
</script>

<style lang="less">
    page{
        background: linear-gradient(to top right,#ec2c98, #f68668);
    }

    .history-rank{
        width: 100%;
        height: 100%;

        .rank-style{
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;

        }

        .tab{
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            /*height: 120rpx;*/
        }

        .rank{
            /*border: 1rpx solid red;*/
            padding-left: 20rpx;
            padding-right: 20rpx;
            box-sizing: border-box;
            .world-firend{
                display: flex;
                justify-content: space-around;
                align-items: center;
                margin-top: 25rpx;
                padding: 0 ;
                /*border: 1rpx solid red;*/

                .world-img,.friend-img{
                    /*width: 290rpx;*/
                    /*height: 75rpx;*/
                }

            }

        }


    }
</style>