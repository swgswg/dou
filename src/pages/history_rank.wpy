<template>
    <view class="history-rank">
        <view class="tab">
            <rankingbutton :tab.sync="tabData"></rankingbutton>
        </view>
        <view class="rank-data">
            <scroll-view scroll-y bindscrolltolower="scrollToLower">
                <ranking :ranking.sync="rankingData"></ranking>
                <!--加载更多时动画-->
                <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
                <!--暂无数据显示-->
                <placeholder :show.sync="is_empty" message="暂无数据"></placeholder>
            </scroll-view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import RankingButton from '@/components/ranking_button';
    import Ranking from '@/components/ranking';
    import BottomLoadMore from "@/components/common/bottomLoadMore"
    import Placeholder from "@/components/common/placeholder"

    export default class MyPage extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: '历史排名'
        };

        // 声明页面中所引用的组件，或声明组件中所引用的子组件
        components = {
            rankingbutton:RankingButton,
            ranking:Ranking,
            bottomLoadMore: BottomLoadMore,
            placeholder: Placeholder
        };

        // 页面所需数据均需在这里声明，可用于模板数据绑定
        data = {
            // 排行类型
            tabData:['本周排行','今日排行'],
            // 当前排行类型
            currentTab: 0,
            // 排名数据
            rankingData:[1,2,3,4,5,6,7,8,9,10,12,13,14,15],
            //是否有数据
            is_empty: false,
            //是否显示 底部loading
            showLoading: false,
        };

        // 在Page和Component共用的生命周期函数
        onLoad() {
        };

        // 只在Page中存在的页面生命周期函数
        onShow() {
        };

        // 只在Page中存在的页面生命周期函数
        onReady() {
            console.log(111)
        };

        // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
        methods = {

        };

        // 加载更多
        scrollToLower(){
            console.log("加载更多");
            let that = this;
            that.showLoading = true;
        };

        // 声明组件之间的事件处理函数
        events = {};
    }
</script>

<style lang="less">
    page{
        background: linear-gradient(to top right,#ec2c98, #f68668);
    }

    .history-rank{
        width: 100%;
        height: 100%;

        .tab{
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            height: 120rpx;
        }

        .rank-data{
            width: 100%;
            height: 990rpx;
            /*border: 1rpx solid red;*/
            background-color: #fff;


        }
    }
</style>