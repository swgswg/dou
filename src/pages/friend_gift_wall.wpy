// pages-好友礼物墙
<style lang="less">
    page{
        background-color: #f0f0f0;
    }
    .friend-gift-wall{

        .icon-youjiantou{
            font-size: 22rpx;
        }

        .btn-1{
            background-color:#d7e2eb;
        }
        .btn-2{
            background-color:#ffd824;
        }
        .btn-3{
            background-color:#d7a473;
        }

        .close{
            top:0;
            right:0;
            border: 1px solid #999;

            .icon-close{
                color:#999;
            }
        }

    }
</style>

<template>
    <view class="friend-gift-wall">
        <block wx:if="{{!is_empty}}">
            <!--前三名 start-->
            <view style="margin-top:{{60*px2rpxHeight}}px;">
                <firstthree :firstOfThree.sync="firstOfThree"></firstthree>
            </view>
            <!--前三名 end-->
        </block>

        <!--暂无数据显示-->
        <placeholder :show.sync="is_empty" message="暂无数据"></placeholder>

        <!--中间三个按钮 start-->
        <view class="flex-around w-percent100 bgcf" style="height:{{180*px2rpxHeight}}px;margin-top:{{20*px2rpxHeight}}px;">
            <view class="flex-center f30 cf btn-1" style="width:{{184*px2rpxWidth}}px;height:{{70*px2rpxHeight}}px;border-radius:{{35*px2rpxHeight}}px;" @tap.stop="goToRecord">好友信息</view>
            <view class="flex-center f30 cf btn-2" style="width:{{184*px2rpxWidth}}px;height:{{70*px2rpxHeight}}px;border-radius:{{35*px2rpxHeight}}px;" data-status="vip" @tap.stop="goToSendGift">送VIP墙</view>
            <view class="flex-center f30 cf btn-3" style="width:{{184*px2rpxWidth}}px;height:{{70*px2rpxHeight}}px;border-radius:{{35*px2rpxHeight}}px;" @tap.stop="goToFansHoldList">粉丝霸榜</view>
        </view>
        <!--中间三个按钮 end-->

        <!--历史记录 start-->
        <view style="width:100%;height:{{30*px2rpxHeight}}px;margin-top:{{27*px2rpxHeight}}px;padding:0 {{20*px2rpxWidth}}px;box-sizing:border-box;">
            <view class="flex-end fans-list-btn">
                <view class="flex-center f24 c6 right" @tap.stop="goToPublicWallRecord">
                    <view>历史记录</view>
                    <text style="margin-left:{{5*px2rpxWidth}}px;" class="iconfont icon-youjiantou"></text>
                </view>
            </view>
        </view>
        <!--历史记录 end-->

        <!--公共的礼物墙 start-->
        <view class="pr flex-center" style="margin:{{20*px2rpxHeight}}px 0;">
            <showgiftwall :giftList.sync="publicWall" :ratio.sync="ratio"></showgiftwall>
            <view class="button button-highlight button-pill button-small"
                  style="position:absolute;bottom:{{20*px2rpxHeight}}px;right:{{70*px2rpxWidth}}px;z-index:999;background-color:#fed530"
                  data-status="public"
                  @tap.stop="goToSendGift"
            >送礼</view>
        </view>
        <!--公共的礼物墙 end-->

        <!--遮盖层 start-->
        <view class="cover">
            <block wx:if="{{showCoverLayer}}">
                <coverlayer>
                    <view class="pr" slot="content">
                        <view class="pa flex-center br-percent50 close" style="width:{{35*px2rpxWidth}}px;height:{{35*px2rpxWidth}}px;" @tap.stop="closeCoverLayer">
                            <text class="iconfont icon-close" style="margin-top:{{5*px2rpxWidth}}px;"></text>
                        </view>
                        <image src="{{weikaiqi}}" lazy-load="true" style="top:0;left:0;width:{{553*px2rpxWidth}}px;height:{{598*px2rpxWidth}}px;"></image>
                        <view class="pa flex-between border-box" style="bottom:{{50*px2rpxHeight}}px;left:0;width:{{553*px2rpxWidth}}px;height:{{60*px2rpxWidth}}px;padding:0 {{70*px2rpxWidth}}px 0 {{50*px2rpxWidth}}px;">
                            <image src="{{lianjie}}" lazy-load="true" style="width:{{207*px2rpxWidth}}px;height:{{60*px2rpxWidth}}px;" @tap.stop="connectEquipment"></image>
                            <image src="{{shouchong}}" lazy-load="true" style="width:{{207*px2rpxWidth}}px;height:{{60*px2rpxWidth}}px;" @tap.stop="shouChong"></image>
                        </view>
                    </view>
                </coverlayer>
            </block>
        </view>
        <!--遮盖层 end-->

    </view>
</template>

<script>
    import wepy from 'wepy';
    import {USER_INFO,PX_TO_RPX } from '@/utils/constant';
    import util from '@/utils/util';
    import tip from '@/utils/tip';
    import api from '@/utils/api';
    import imgApi from '@/utils/imgApi';
    import weixin from '@/utils/weixin';

    import FirstThree from '@/components/first_three';
    import ShowGiftWall from '@/components/show_gift_wall';
    import Placeholder from "@/components/common/placeholder";
    import CoverLayer from "@/components/common/cover_layer";

    // 收礼物人id
    let userId = null;
    // 送礼物人id
    let fansId = null;
    // 判断有没有未送出的私墙
    let hasSendVipWall = null;
    // 能不能送私墙 0不能送/1能送
    let canSendVipWall = 0;

    export default class MyPage extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: '好友礼物墙',
            enablePullDownRefresh:false,
        };

        // 声明页面中所引用的组件，或声明组件中所引用的子组件
        components = {
            firstthree:FirstThree,
            // showgiftwall_1:ShowGiftWall,
            // showgiftwall_2:ShowGiftWall,
            // showgiftwall_3:ShowGiftWall,
            showgiftwall:ShowGiftWall,
            placeholder: Placeholder,
            coverlayer: CoverLayer
        };

        // 页面所需数据均需在这里声明，可用于模板数据绑定
        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
            fileUrl:imgApi.fileUrl,
            energy:imgApi.energy,
            weikaiqi:imgApi.weikaiqi,
            shouchong:imgApi.shouchong,
            lianjie:imgApi.lianjie,
            // userId:null,  // 收礼物人id
            // fansId:null,  // 送礼物人id
            firstOfThree:null,
            is_empty:true,
            // 礼物墙 325*430
            canvasWidth:api.canvasWidth,
            canvasHeight:api.canvasHeight,
            logoWidth:api.logoWidth,
            logoHeight:api.logoHeight,

            // 公共墙礼物
            publicWall:null,
            publicWallId:null,
            ratio:1.1,
            showCoverLayer:false,
            // 判断有没有未送出的私墙
            // hasSendVipWall:null,
        };

        // 在Page和Component共用的生命周期函数
        onLoad(options) {
            let px2rpx = wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;

            if(util.isEmpty(options.userId)){
                tip.error('网络错误');
            } else {
                userId = options.userId;
            }
            this.$apply();
        };

        onShow(){
            weixin.updateUserInfo();
            setTimeout(()=>{
                let userInfo = wepy.getStorageSync(USER_INFO);
                fansId = userInfo.id;
                canSendVipWall = userInfo.status;
            },800);
        }

        async onReady() {
            // console.log('friend_gift_wall===',this.userId);
            // 获取私墙前三名
            this.getSPresentWallallEvent();
            // 获取公墙
            this.getPresentsWallEvent();

            // 判断能不能送礼物墙
            this.getSpNumEvent();
        };

        methods = {

            // 好友信息
            goToRecord(){
                wx.navigateTo({
                    url:'/pages/record?userId='+userId
                });
            },

            // 粉丝霸榜
            goToFansHoldList(){
                wx.navigateTo({
                    url:'/pages/fans_hold_list?userId='+userId
                });
            },

            // 查看vip墙详情
            goToVIPWall(e){
                let VipWallId = e.currentTarget.dataset.id;
                wx.navigateTo({
                    url:'/pages/VIP_wall?wallId='+VipWallId
                })
            },

            // 公墙历史记录
            goToPublicWallRecord(){
                let publicWallId = this.publicWallId;
                wx.navigateTo({
                    url:'/pages/public_wall_record?publicWallId=' + publicWallId
                });
            },

            // 送礼
            goToSendGift(e){
                let status = e.currentTarget.dataset.status;
                if(status == 'vip'){
                    // 判断有没有私墙权限
                    if(canSendVipWall != 1){
                        tip.longtoast('您没有权限送私墙');
                        return;
                    }

                    // 您有未完成的vip墙
                    if(hasSendVipWall != 0){
                        tip.longtoast('您有未完成的礼物墙');
                        return;
                    }
                }
                wx.navigateTo({
                   url:'/pages/send_gift?sendStatus=' + status + '&userId=' + userId
                });
            },

            // 连接设备
            connectEquipment(){
                wx.navigateTo({
                    url:'/pages/select_bluetooth'
                })
            },

            // 首充礼包
            shouChong(){

            },

            // 关闭遮盖层
            closeCoverLayer(){
                this.showCoverLayer = false;
            },
        };

        // 声明组件之间的事件处理函数
        events = {};

        // 获取私墙前三名
        async getSPresentWallallEvent(){
            let res = await api.getSPresentWallall({
                query:{
                    userId: userId,
                    page:1,
                    pageSize:3
                }
            });
            if(res.data.state == 1){
                let data = res.data.data.PageInfo.list;
                if(util.isEmpty(data)){
                    this.is_empty = true;
                } else {
                    let firstOfThree = [];
                    firstOfThree.push(data[1]);
                    // this.threeGiftWall_2_id = data[1].id;
                    // this.getSPresentsWallOneEvent(data[1].id,threeGiftWall_2);

                    firstOfThree.push(data[0]);
                    // this.threeGiftWall_1_id = data[1].id;
                    // this.getSPresentsWallOneEvent(data[0].id,threeGiftWall_1);

                    firstOfThree.push(data[2]);
                    // this.threeGiftWall_3_id = data[1].id;
                    // this.getSPresentsWallOneEvent(data[2].id,threeGiftWall_3);

                    this.firstOfThree = firstOfThree;
                    this.is_empty = false;
                }

            } else {
                tip.error('网络错误');
            }
            this.$apply();
        }

        // 根据presentswallId获取完成私墙
        async getSPresentsWallOneEvent(mypresentswallId,threeGiftWall_x){
            let res = await api.getSPresentsWallOne({
                query:{
                    presentswallId:mypresentswallId
                }
            });
            if(res.data.state == 1){
                // let threeGiftWall = this.threeGiftWall;
                // if(util.isEmpty(threeGiftWall)){
                //     threeGiftWall = [];
                // }
                let dataList = res.data.data.list;
                // 增加一个人物动漫形象
                let logo = res.data.data.logo;
                let logoX = this.canvasWidth - this.logoWidth;
                let logoY = this.canvasHeight - this.logoHeight;
                dataList.push({giftId:-1,wide:this.logoWidth,high:this.logoHeight,xaxle:logoX,yaxle:logoY,url:logo});
                this[threeGiftWall_x] = dataList;
                // threeGiftWall.push(dataList);
                // this.threeGiftWall = threeGiftWall;
            } else {
                tip.error('网络错误');
            }
            this.$apply();
        }

        // 根据userId获取公共礼物墙
        async getPresentsWallEvent(){
            let publicList = [];
            let res = await api.getPresentsWall({
                query:{
                    userId:userId
                }
            });
            // console.log(res);
            if(res.data.state == 1){
                let data = res.data.data;
                // console.log(data.axle);
                publicList = data.axle;
                let logo = data.logo;
                let logoX = this.canvasWidth - this.logoWidth;
                let logoY = this.canvasHeight - this.logoHeight;
                publicList.push({giftId:-1,wide:this.logoWidth,high:this.logoHeight,xaxle:logoX,yaxle:logoY,url:logo});
                // console.log(publicList);
                this.publicWall = publicList;
                this.publicWallId = data.id;
            } else {
                tip.error('网络错误');
            }
            this.$apply();
        }

        // 判断送私墙之前有没有未完成的私墙
        async getSpNumEvent(){
            let res = await api.getSpNum({
                query:{
                    id:fansId
                }
            });
            if(res.data.state == 1){
                hasSendVipWall = res.data.data.type;
            } else {
                tip.error('网络错误');
            }
        }

    }
</script>

