// 礼物墙
<template>
    <view class="gift-wall">
        <view class="gift-info">
            <info :userId.sync="otherUserId" :userName.sync="otherUserName" :photo.sync="otherPhoto" :showRight="showRight"></info>
        </view>
        <view class="wall">
            <view>
                <giftcanvas
                    :canvasWidth.sync="canvasWidth"
                    :canvasHeight.sync="canvasHeight"
                    :giftList.sync="giftList"
                ></giftcanvas>
            </view>
            <view>
                <energytank :tankWidth.sync="energyTankWidth" :tankHeight.sync="energyTankHeight" :nowEnergy.sync="nowEnergy" :fullEnergy.sync="fullEnergy"></energytank>
            </view>
        </view>
        <view style="width: 100%;background-color: #333;margin-top:20rpx">
            <mygift :myGift.sync="myGifts" :canvasWidth.sync="canvasWidth" :canvasHeight.sync="canvasHeight" :logoLocation.sync="logoLocation" :fansId.sync="otherUserId" :presentsWallId.sync="otherGiftWallId" :isTakeGift.sync="isTakeGift"></mygift>
        </view>
        <view style='width:0px;height:0px;overflow:hidden;'>
            <canvas canvas-id="myCanvas" style="width:{{canvasWidth*px2rpxWidth}}px;height:{{canvasHeight*px2rpxHeight}}px;background-color: #fff;" hidden="true"/>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import api from '@/utils/api';
    import imgApi from '@/utils/imgApi';
    import util from '@/utils/util';
    import tip from '@/utils/tip';
    import weixin from '@/utils/weixin';
    import {USER_INFO,PX_TO_RPX} from '@/utils/constant';
    import Info from '@/components/info';
    import GiftCanvas from '@/components/gift_canvas';
    import EnergyTank from '@/components/energy_tank';
    import Mygift from '@/components/mygift';

    export default class MyPage extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: '礼物墙'
        };

        // 声明页面中所引用的组件，或声明组件中所引用的子组件
        components = {
            info:Info,
            giftcanvas:GiftCanvas,
            energytank:EnergyTank,
            mygift:Mygift
        };

        // 页面所需数据均需在这里声明，可用于模板数据绑定
        data = {
            fileUrl:imgApi.fileUrl,
            px2rpxWidth:0,
            px2rpxHeight:0,
            // 卡通人物形象的宽高
            logoWidth:131,
            logoHeight:234,
            // 礼物墙的宽
            canvasWidth:650,
            // 礼物墙的高
            canvasHeight:860,
            // otherUserInfo:null,
            otherUserId:null,
            otherUserName:'',
            otherPhoto:'',
            // 显示个人信息模块的右箭头
            showRight:true,
            otherGiftWallId:null,
            // 用户拥有的礼物
            myGifts:null,
            // 被赠送礼物的礼物墙
            giftList:[],
            // 能量槽宽
            energyTankWidth:30,
            // 能量槽高
            energyTankHeight:860,
            // 当前能量值
            nowEnergy:0,
            // 满能量值
            fullEnergy:1314,
            // 是否还能赠送个礼物(能量值满不能赠送)
            isTakeGift:true,
            // 卡通人物所在的坐标
            logoLocation:null,
        };

        // 在Page和Component共用的生命周期函数
        async onLoad(options) {
            let px2rpx = await wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;

            let otherUserId = options.userId;
            this.otherUserId = otherUserId;
            // 获取被送礼物用户的礼物墙
            let otherUserGift = await api.getPresentsWall({
                query:{
                    userId:otherUserId
                }
            });
            // console.log(otherUserGift);
            // 请求成功
            if(otherUserGift.data.state == 1){
                let giftList = otherUserGift.data.data.axle;
                // console.log(giftList)
                if(util.isEmpty(giftList)){
                    giftList = [];
                }
                // 礼物墙的id
                this.otherGiftWallId = otherUserGift.data.data.id;
                // 增加一个人物动漫形象
                let logo = otherUserGift.data.data.logo;
                let logoX = this.canvasWidth - this.logoWidth;
                let logoY = this.canvasHeight - this.logoHeight;
                // console.log('logoX=='+logoX,'logoY=='+logoY)
                giftList.push({id:-1,giftId:-1,wide:131,high:234,xaxle:logoX,yaxle:logoY,score:0,type:1,url:logo});
                this.logoLocation = {x:logoX,y:logoY};
                // console.log(this.logoLocation);
                // 当前礼物墙的总能量
                let len = giftList.length;
                let sumScore = 0;
                for(let i = 0; i < len; i++){
                    sumScore += parseInt(giftList[i].score);
                }
                this.nowEnergy = sumScore;
                this.giftList = giftList;
                this.otherUserName = otherUserGift.data.data.name;
                this.otherPhoto = otherUserGift.data.data.photo;
            } else {
                wx.showToast({
                    title: '网络错误',
                    icon: 'none',
                    duration: 1000
                })
            }
            this.$apply();
        };

        // 只在Page中存在的页面生命周期函数
        onShow() {

        };

        // 只在Page中存在的页面生命周期函数
        async onReady() {
            let activeUserInfo = wepy.getStorageSync(USER_INFO);
            // 获取送礼物用户拥有的礼物
            let activeUserGift = await api.getUserGift({
                query:{
                    userId:activeUserInfo.id
                }
            });
            this.myGifts = activeUserGift.data.data;
            // console.log(activeUserGift.data.data);
            this.$apply();
        };


        events = {
            // 将所有礼物状态改为1(防止确定后依然可以拖动礼物)
            updateTypeTo1(){
                let gift = this.giftList;
                let len = gift.length;
                for(let i = 0; i < len; i++){
                    gift[i].type = 1;
                }
                this.giftList = gift;
                // console.log(gift)
                // console.log(this.giftList)
                this.$apply();
            },

            // 添加礼物
            addGiftToWall(oneGift){
                console.log(this.isTakeGift+'===111');
                if(!this.isTakeGift){
                    return;
                }
                // console.log(oneGift);
                let giftList = this.giftList;
                // console.log(giftList);
                giftList.push(oneGift);
                let len = giftList.length;
                // 礼物墙的总能量
                let sumScore = 0;
                for(let i = 0; i < len; i++){
                    sumScore += parseInt(giftList[i].score);
                }
                this.nowEnergy = sumScore;
                // 判断能量是否已满
                this.isFullEnergy(sumScore);

                this.giftList = giftList;
                this.$apply();
            },

            // 满能量生成图片
            async createImg(mypresentsWallId){
                console.log(mypresentsWallId);
                tip.loading();
                let that = this;
                let giftList = this.giftList;
                // console.log(giftList);
                let len = giftList.length;
                // 在画布上绘制图片
                var ctx = wx.createCanvasContext('myCanvas');
                for(let i = 0; i < len; i++){
                    await setTimeout(function() {
                        wx.downloadFile({
                            url: that.fileUrl + giftList[i].url,
                            success: function(res) {
                                // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容
                                if (res.statusCode === 200) {
                                    // ctx.save();
                                    ctx.drawImage( res.tempFilePath, giftList[i].xaxle, giftList[i].yaxle, giftList[i].wide, giftList[i].high);
                                    // ctx.restore();
                                    ctx.draw(true);
                                }
                            }
                        });
                    },100);
                }
                let width = that.canvasWidth * that.px2rpxWidth*2;
                let height = that.canvasHeight * that.px2rpxHeight*2;
                setTimeout(function () {
                    wx.canvasToTempFilePath({
                        x: 0,
                        y: 0,
                        width: width,
                        height: height,
                        destWidth: width,
                        destHeight: height,
                        canvasId: 'myCanvas',
                        quality:1,
                        success: function (res) {
                            // console.log(res);
                            weixin.uploadFiveToAliyunOOS(res.tempFilePath,function(fileNmae) {
                                console.log('fileName=='+fileNmae);
                                that.saveGiftWallPhoto(mypresentsWallId,fileNmae);
                            });
                        }
                    });
                },2000);

                tip.loaded();
            }

        };

        // 判断是否满能量
        isFullEnergy(en){
            let that = this;
            if(en >= this.fullEnergy){
                wx.showModal({
                    title: '温馨提示',
                    content: '当前礼物墙能量已满,请点击下方确定按钮,重新开始新的礼物墙',
                    showCancel:false,
                    success: function(res) {
                    }
                });
                this.isTakeGift = false;
                this.$apply();
            }
        }

        // 保存礼物墙照片
        async saveGiftWallPhoto(mypresentsWallId,fileNmae){
            let suc = await api.updatePresentsWall({
                query:{
                    presentsWallId:mypresentsWallId,
                    url:fileNmae,
                }
            });
            console.log(suc);
            if(suc.data.state == 1){
                // this.onLoad();
                // this.onReady();
            }
        }

    }
</script>

<style lang="less">
    .gift-wall{
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        width: 100%;
        background-color: #aaa;

        .gift-info,.wall{
            width: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20rpx 20rpx 0 20rpx;
            box-sizing: border-box;
            /*border: 1rpx solid blue;*/
        }

        .wall{
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
            /*margin-top: 28rpx;*/
            /*border: 1rpx solid red;*/
        }
    }
</style>