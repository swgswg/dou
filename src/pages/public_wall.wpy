// page-公共礼物墙
<template>
    <view class="public-wall" style="height:{{1205*px2rpxHeight}}px;background: url({{wall_bg}}) no-repeat 0 0;">

        <!--时间/能量 start-->
        <view class="time-endrgy" style="padding:{{10*px2rpxHeight}}px {{30*px2rpxWidth}}px;">
            <view></view>
            <view class="time">{{weekStartDate}}--{{weekEndDate}}</view>
            <view class="energy">
                <image src="{{energy}}" style="width:{{21*px2rpxWidth}}px;height:{{26*px2rpxWidth}}px;"></image>
                <view style="margin-left:{{10*px2rpxWidth}}px;">{{score}}</view>
            </view>
        </view>
        <!--时间/能量 end-->

        <!--礼物墙 start-->
        <view class="wall" @tap.stop="goToPublicWallRecord">
            <showgiftwall :giftList.sync="giftList" :ratio.sync="ratio"></showgiftwall>
        </view>
        <!--礼物墙 end-->

        <block wx:if="{{!is_empty}}">
            <!--人物头像 start-->
            <view class="profile">
                <block wx:for="{{userPhoto}}" wx:for-item="img" wx:key="{{index}}">
                    <image src="" style="width:{{60*px2rpxWidth}}px;height:{{60*px2rpxWidth}}px;margin-top:{{24*px2rpxHeight}}px;margin-right:{{10*px2rpxWidth}}px;"></image>
                </block>
                <block wx:if="{{userPhoto.length >= 19}}">
                    <image src="{{more}}" style="width:{{60*px2rpxWidth}}px;height:{{60*px2rpxWidth}}px;margin-top:{{24*px2rpxHeight}}px;margin-right:{{10*px2rpxWidth}}px;" @tap.stop="goToPublicWallRecord"></image>
                </block>
            </view>
            <!--人物头像 end-->
        </block>
        <block wx:else>
            <view class="flex-center" style="margin-top:{{50*px2rpxHeight}}px;">暂无好友赠送</view>
        </block>
        <!--暂无数据显示-->
        <!--<placeholder :show.sync="is_empty" message="暂无数据"></placeholder>-->

    </view>
</template>

<script>
    import wepy from 'wepy';
    import {USER_INFO,PX_TO_RPX } from '@/utils/constant';
    import util from '@/utils/util';
    import tip from '@/utils/tip';
    import api from '@/utils/api';
    import imgApi from '@/utils/imgApi';
    import ShowGiftWall from '@/components/show_gift_wall';
    import Placeholder from "@/components/common/placeholder";

    export default class MyPage extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: '公共礼物墙'
        };

        // 声明页面中所引用的组件，或声明组件中所引用的子组件
        components = {
            showgiftwall:ShowGiftWall,
            placeholder: Placeholder,
        };

        // 页面所需数据均需在这里声明，可用于模板数据绑定
        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
            wall_bg:imgApi.wall_bg,
            more:imgApi.more,
            energy:imgApi.energy,
            // 本周开始日期
            weekStartDate:null,
            //获得本周的结束日期
            weekEndDate:null,
            is_empty:false,
            canvasWidth:api.canvasWidth,
            canvasHeight:api.canvasHeight,
            userId:null,
            logo:null,
            logoWidth:api.logoWidth,
            logoHeight:api.logoHeight,
            giftList:null,
            ratio:1.1,
            userPhoto:null,
            score:0,
            publicWallId:null,
        };

        // 在Page和Component共用的生命周期函数
        async onLoad(){
            let px2rpx = await wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;

            let userInfo = await wepy.getStorageSync(USER_INFO);
            this.logo = userInfo.logo;
            this.userId = userInfo.id;
            this.$apply();
        }

        // 只在Page中存在的页面生命周期函数
        onShow() {
        };

        // 只在Page中存在的页面生命周期函数
        async onReady() {
            let userId = this.userId;
            // 获取公共礼物墙
            let res = await api.getPresentsWall({
                query:{
                    userId:userId
                }
            });
            if(res.data.state == 1){
                let data = res.data.data;
                if(util.isEmpty(data.userPhoto)){
                    this.is_empty = true;
                } else {
                    this.is_empty = false;
                }
                this.userPhoto = data.userPhoto;
                this.score = data.score;
                this.publicWallId = data.id;
                let giftList = data.axle;
                let logo = this.logo;
                let logoX = this.canvasWidth - this.logoWidth;
                let logoY = this.canvasHeight - this.logoHeight;
                giftList.unshift({giftId:-1,wide:this.logoWidth,high:this.logoHeight,xaxle:logoX,yaxle:logoY,url:logo});
                this.giftList = giftList;
            } else {
                tip.error('网络错误');
            }
            this.$apply();

            // 获取本周开始结束日期
            this.getWeekTime();
        };

        // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
        methods = {
            // 查看公共墙记录
            goToPublicWallRecord(){
                let publicWallId = this.publicWallId;
                wx.navigateTo({
                    url:'/pages/public_wall_record?publicWallId='+publicWallId
                })
            }
        };

        // 获取本周时间
        getWeekTime(){
            let now = new Date(); //当前日期
            let nowDayOfWeek = now.getDay(); //今天本周的第几天
            let nowYear = now.getFullYear(); //当前年
            let nowMonth = now.getMonth(); //当前月
            let nowDay = now.getDate(); //当前日
            //获得本周的开始日期
            let weekStartDate = new Date(nowYear, nowMonth, nowDay - nowDayOfWeek+1);
            console.log(weekStartDate);
            this.weekStartDate =util.formatDate(weekStartDate, 'MM-DD');
            //获得本周的结束日期
            let weekEndDate = new Date(nowYear, nowMonth, nowDay + (7 - nowDayOfWeek));
            this.weekEndDate = util.formatDate(weekEndDate, 'MM-DD');
            this.$apply();
        };
    }
</script>

<style lang="less">
    .public-wall{
        width: 100%;

        .time-endrgy{
            display: flex;
            justify-content: space-between;
            align-items: center;

            .time{
                font-size: 24rpx;
                color: #ec2c98;
            }
            .energy{
                display: flex;
                justify-content: center;
                align-items: center;
                font-size: 24rpx;
            }
        }

        .wall{
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .profile{
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            align-items: center;

            image{
                border: 1rpx solid red;
            }
        }

    }
</style>