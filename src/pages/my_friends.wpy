// 我的好友
<template>
    <view class="my_friends">
        <view class="friends-header" style="width:{{702 * px2rpxWidth}}px;height:{{80 * px2rpxHeight}}px;margin-top:{{20*px2rpxHeight}}px">
            <view class="text1" style="width:{{60 * px2rpxWidth}}px;margin-left:{{22 * px2rpxHeight}}px">排名</view>
            <view class="text2" style="width:{{60 * px2rpxWidth}}px;margin-left:{{30 * px2rpxHeight}}px">头像</view>
            <view class="text3" style="width:{{90 * px2rpxWidth}}px;margin-left:{{30 * px2rpxHeight}}px">用户名</view>
            <view class="text4" style="width:{{120 * px2rpxWidth}}px;margin-left:{{50 * px2rpxHeight}}px">抖腿时长</view>
            <view class="text5" style="width:{{120 * px2rpxWidth}}px;margin-left:{{50 * px2rpxHeight}}px">抖腿次数</view>
        </view>
        <view class="friends-rank" style="width:{{702 * px2rpxWidth}}px;height:{{1220 * px2rpxHeight}}px;">
            <scroll-view scroll-y bindscrolltolower="scrollToLower">
                <ranking :ranking.sync="rank"></ranking>
                <!--加载更多时动画-->
                <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
                <!--暂无数据显示-->
                <placeholder :show.sync="is_empty" message="暂无消息"></placeholder>
            </scroll-view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import api from '@/utils/api';
    import {USER_INFO, PX_TO_RPX } from '@/utils/constant';
    import Ranking from '@/components/ranking';
    import BottomLoadMore from "../components/common/bottomLoadMore";
    import Placeholder from "../components/common/placeholder";

    export default class MyPage extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: '我的朋友'
        };

        // 声明页面中所引用的组件，或声明组件中所引用的子组件
        components = {
            ranking:Ranking,
            bottomLoadMore: BottomLoadMore,
            placeholder: Placeholder
        };

        // 页面所需数据均需在这里声明，可用于模板数据绑定
        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
            userId:null,
            // 排名数据
            rank:[
                { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
            ],
            page:1,
            pageSize:20,
            // rank:null,
            //是否显示 底部loading
            showLoading: false,
            // 是否有数据
            is_empty: true
        };

        // 在Page和Component共用的生命周期函数
        onLoad() {
            // 获取屏幕尺寸适配
            let px2rpx = wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;

            let userInfo = wepy.getStorageSync(USER_INFO);
            this.userId = userInfo.id;
            this.$apply();
        };

        // 只在Page中存在的页面生命周期函数
        onShow() {
        };

        // 只在Page中存在的页面生命周期函数
        onReady() {

        };

        // 声明数据watcher（详见后文介绍）
        watch = {};

        // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
        methods = {
            // 滚动到底部/右边，会触发 scrolltolower 事件
            scrollToLower(){
                this.showLoading = true;
            },
        };

        // 好友总排行榜
        async getFriends(){
            // let res = await api.getFriend({
            //     // query:
            // });
        };
    }
</script>

<style lang="less">
    .my_friends{

        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;

        .friends-header{
            display: flex;
            justify-content: flex-start;
            align-items: center;
            font-size: 28rpx;
            background: linear-gradient(to top right,#ec2c98, #f68668);

        }

        .friends-rank{
            border: 1rpx solid red;
        }
    }
</style>