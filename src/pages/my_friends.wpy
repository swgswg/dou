// 我的好友
<template>
    <view class="flex flex-column-center w-percent100 my-friends">
        <view class="flex flex-around w-percent100 f28 friends-header"
              style="height:{{80*px2rpxHeight}}px;">

            <view class="flex flex-center h-percent100" style="width:{{80*px2rpxWidth}}px;">排名</view>
            <view class="flex flex-center h-percent100" style="width:{{80*px2rpxWidth}}px;">头像</view>
            <view class="flex flex-center h-percent100" style="width:{{150*px2rpxWidth}}px;">用户名</view>
            <view class="flex flex-center h-percent100" style="width:{{180*px2rpxWidth}}px;">抖腿时长</view>
            <view class="flex flex-center h-percent100" style="width:{{180*px2rpxWidth}}px;">抖腿次数</view>
        </view>
        <view class="flex flex-center w-percent100"
              style="height:{{1100*px2rpxHeight}}px;">

            <scroll-view scroll-y bindscrolltolower="scrollToLower">
                <ranking :ranking.sync="rank"></ranking>
                <!--加载更多时动画-->
                <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
                <!--暂无数据显示-->
                <placeholder :show.sync="is_empty" message="暂无数据"></placeholder>
            </scroll-view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import {USER_INFO, PX_TO_RPX } from '@/utils/constant';
    import api from '@/utils/api';
    import tip from '@/utils/tip';
    import util from '@/utils/util';
    import Ranking from '@/components/ranking';
    import BottomLoadMore from "../components/common/bottomLoadMore";
    import Placeholder from "../components/common/placeholder";

    let page = 1;
    let pageSize = 20;
    let isLastPage = 20;
    let userId = null;

    export default class MyPage extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: '我的朋友',
            disableScroll: true,
        };

        // 声明页面中所引用的组件，或声明组件中所引用的子组件
        components = {
            ranking:Ranking,
            bottomLoadMore: BottomLoadMore,
            placeholder: Placeholder
        };

        // 页面所需数据均需在这里声明，可用于模板数据绑定
        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
            // userId:null,
            // 排名数据
            rank:[
                // { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                // { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                // { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                // { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                // { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                // { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                // { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                // { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                // { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                // { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                // { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
                // { name:'aaaaa',photo:'',rownum:0,shakeNum:0,time:'12:50',userId:0,},
            ],
            // isLastPage:false,
            // page:1,
            // pageSize:20,
            // rank:null,
            //是否显示 底部loading
            showLoading: false,
            // 是否有数据
            is_empty: true
        };

        // 在Page和Component共用的生命周期函数
        onLoad() {
            // 获取屏幕尺寸适配
            let px2rpx = wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;

            let userInfo = wepy.getStorageSync(USER_INFO);
            userId = userInfo.id;
            this.$apply();
        };

        // 只在Page中存在的页面生命周期函数
        onReady() {
            this.getFriendEvent(page,pageSize);
        };

        // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
        methods = {
            // 滚动到底部/右边，会触发 scrolltolower 事件
            scrollToLower(){
                if(isLastPage){
                    tip.toast('这是最后一页了','none');
                    return;
                }
                page++;
                this.getFriendEvent();
            },
        };

        // 好友总排行榜
        async getFriendEvent(){
            this.showLoading = true;
            let res = await api.getFriend({
                query:{
                    userId:userId,
                    type:0,
                    status:1,
                    page:page,
                    pageSize:pageSize,
                }
            });
            if(res.data.state == 1){
                let rank = this.rank;
                let data = res.data.data.PageInfo;
                rank = rank.concat(data.list);
                if(rank.length < 1){
                    this.is_empty = true;
                } else {
                    this.is_empty = false;
                }
                this.rank = rank;
                this.$apply();
                isLastPage = data.isLastPage;
            } else {
                tip.error('网络错误');
            }
            this.showLoading = false;
            this.$apply();
        };
    }
</script>

<style lang="less">
    .my-friends{
        padding: 30rpx 24rpx 0rpx 24rpx;
        box-sizing: border-box;

        .friends-header{
            background: linear-gradient(to top right,#ec2c98, #f68668);
        }
    }
</style>