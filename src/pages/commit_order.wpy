// page--提交订单
<style lang="less">
    page{
        background-color: #f0f0f0;
    }
    .commit-order{

        .goods-infomation{
            justify-content: center;
            border-bottom: 1rpx solid #bbb;

            .price{
                color: #f03e3e;
            }

            .icon-youjiantou{
                font-size: 22rpx;
            }
        }

        .commit{
            position: fixed;
            left: 0;
            bottom: 0;

            .btn{
                background-color: #ffd824;
            }
        }
    }
</style>

<template>
    <view class="commit-order">
        <view>
            <!--地址 start-->
            <block wx:if="{{hasAddress}}">
                <view style="width:100%;height:{{160*px2rpxHeight}}px;background-color:#fff;">
                    <addresslist :addressList.sync="address" :isAllowEdit.sync="isAllowEditAddress"></addresslist>
                </view>
            </block>
            <block wx:else>
                <view style="width:100%;height:{{154*px2rpxHeight}}px;">
                    <emptyaddress :selectOrAdd.sync="selectOrAdd"></emptyaddress>
                </view>
            </block>
            <!--地址 end-->

            <!--商品信息 start-->
            <view class="flex-column w-percent100 bgcf goods-infomation" style="margin-top:{{20*px2rpxHeight}}px;padding:{{30*px2rpxHeight}}px {{30*px2rpxWidth}}px;box-sizing: border-box">
                <view class="flex-start w-percent100">
                    <view class="flex-center" style="width:{{185*px2rpxWidth}}px;">
                        <image src="{{fileUrl + goodsInfo.photo}}" lazy-load="true" style="width:{{185*px2rpxWidth}}px;height:{{185*px2rpxWidth}}px;"></image>
                    </view>
                    <view class="flex-column" style="width:{{480*px2rpxWidth}}px;height:{{185*px2rpxWidth}}px;margin-left:{{26*px2rpxWidth}}px;">
                        <view class="flex-between">
                            <view class="f32 c0">{{goodsInfo.name}}</view>
                            <view class="f24 price">¥{{goodsInfo.money}}</view>
                        </view>
                        <view class="flex-end f24 ca" style="margin-top:{{45*px2rpxHeight}}px;">x{{goodsNum}}</view>
                    </view>
                </view>
                <view class="flex-between w-percent100 f30">
                    <view style="font-size:30rpx;color:#000;">配送方式</view>
                    <view class="flex-between f24 ca" style="width:{{130*px2rpxWidth}}px;">普通快递 <text class="iconfont icon-youjiantou" style="margin-top:{{5*px2rpxHeight}}px;"></text></view>
                </view>
            </view>
            <!--商品信息 end-->

            <!--合计 start-->
            <view class="flex-between f30 border-box bgcf" style="padding:{{30*px2rpxHeight}}px {{30*px2rpxWidth}}px;">
                <view>合计</view>
                <view style="color:#f03e3e">¥{{goodsTotal}}<text style="font-size:20rpx" wx:if="{{goodsInfo.type != 0}}">({{goodsIntegrals}}积分)</text></view>
            </view>
            <!--合计 end-->

            <!--提交订单 start-->
            <view class="flex-center w-percent100 bgcf commit" style="height:{{98*px2rpxHeight}}px;">
                <veiw class="flex-end h-percent100 border-box" style="width:{{519*px2rpxWidth}}px;padding-right:{{20*px2rpxWidth}}px;font-size:30rpx;">
                    合计：<text style="color:#f03e3e;">¥{{goodsTotal}}</text>
                        <text style="font-size:20rpx;color:#f03e3e;" wx:if="{{goodsInfo.type != 0}}">({{goodsIntegrals}}积分)</text>
                </veiw>
                <view class="flex-center h-percent100 cf btn" style="width:{{231*px2rpxWidth}}px;" @tap.stop="commitOrder">{{btnText}}</view>
            </view>
            <!--提交订单 end-->
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import {USER_INFO,PX_TO_RPX} from '@/utils/constant';
    import util from '@/utils/util';
    import tip from '@/utils/tip';
    import api from '@/utils/api';
    import imgApi from '@/utils/imgApi';
    import calculate from '@/utils/calculate';
    import weixin from '@/utils/weixin';
    import EmptyAddress from '@/components/empty_address';
    import AddressList from '@/components/address_list';

    let userId = null;
    let goodsId = null;
    let orderId = null;
    let openid = null;

    export default class MyPage extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: '提交订单'
        };

        // 声明页面中所引用的组件，或声明组件中所引用的子组件
        components = {
            addresslist:AddressList,
            emptyaddress:EmptyAddress,
        };

        // 页面所需数据均需在这里声明，可用于模板数据绑定
        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
            fileUrl:imgApi.fileUrl,
            // 是否有默认地址
            hasAddress:false,
            address:null,
            // 是否允许编辑地址
            isAllowEditAddress:false,
            selectOrAdd:'选择',
            goodsInfo:null,
            goodsNum:null,
            // 总金额
            goodsTotal:null,
            // 总积分
            goodsIntegrals:null,
            btnText:'提交订单',
        };

        // 在Page和Component共用的生命周期函数
        async onLoad(options){
            let px2rpx = await wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;

            let userInfo = wepy.getStorageSync(USER_INFO);
            userId = userInfo.id;
            openid = userInfo.weChat;
            if(util.isEmpty(options.goodsId)){
                tip.error('网络错误');
            } else {
                goodsId = options.goodsId;
            }
            if(util.isEmpty(options.goodsNum)){
                tip.error('网络错误');
            } else {
                this.goodsNum = options.goodsNum;
            }
            this.$apply();
        };

        // 只在Page中存在的页面生命周期函数
        onShow() {
        };

        // 只在Page中存在的页面生命周期函数
        async onReady() {
            // 获取商品信息
            this.getOneGoodsInfo();

            // 获取默认地址
            this.getDefaultAddr();
        };

        methods = {
            // 提交订单
            async commitOrder(){
                let that = this;
                if(!this.hasAddress){
                    tip.alert('请添加地址');
                    return;
                }
                let data = {
                    goodsId:goodsId,
                    userId:userId,
                    num:that.goodsNum,
                    status:0,
                    consignee:that.address[0].consignee,
                    mobile:that.address[0].mobile,
                    site:that.address[0].site,
                    integral:that.goodsIntegrals,
                    moneys:that.goodsTotal,
                };
                if(this.goodsInfo.type == 0){
                    data.integral = 0;
                }
                if(this.btnText == '提交订单'){
                    let res = await api.addOrders({
                        query:data
                    });
                    if(res.data.state == 1){
                        orderId = res.data.data;
                        this.pay(orderId);
                        this.$apply();
                    } else {
                        tip.error('网络错误');

                    }
                } else if(this.btnText == '继续支付'){
                    this.pay(orderId);
                }
                this.$apply();
            }
        };

        // 获取商品信息
        async getOneGoodsInfo(){
            let res = await api.getGoodsDetails({
                query:{
                    goodsId: goodsId
                }
            });
            if(res.data.state == 1){
                let goodsInfo = res.data.data;

                // 合计
                this.goodsTotal = calculate.calcMul(parseFloat(goodsInfo.money),parseInt(this.goodsNum));

                // 总积分
                if(goodsInfo.type != 0){
                    this.goodsIntegrals = calculate.calcMul(parseFloat(goodsInfo.integral),parseInt(this.goodsNum));
                }

                this.goodsInfo = goodsInfo;
                this.$apply();
            } else {
                tip.error('网络错误');
            }

        }

        // 获取默认地址
        async getDefaultAddr(){
            let res = await api.getMoRen({
                query:{
                    userId: userId,
                }
            });
            if(res.data.state == 1){
                let addr = res.data.data;
                if(util.isEmpty(addr)){
                    this.hasAddress = false;
                } else {
                    this.hasAddress = true;
                    this.address = [addr];
                }
            } else {
                tip.error('网络错误')
            }
            this.$apply();
        }

        // 付钱
        pay(myorderId){
            let that = this;
            let money = this.goodsTotal;
            weixin.weixinPay(money,myorderId,openid,'抖腿商城',(res)=>{
                tip.toast('支付成功');
                wepy.switchTab({
                    url:'/pages/my_info'
                });
                // that.updateOrdersStatusFun(myorderId);
            },()=>{
                that.btnText = '继续支付';
            });
            this.$apply();
        }

        // 修改订单状态(未付款0->付款1)
        async updateOrdersStatusFun(myorderId){
            let res = await api.updateOrdersStatus({
                query:{
                    orderId:myorderId,
                    status:1,
                }
            });
            if(res.data.state == 1){
                wepy.switchTab({
                    url:'/pages/my_info'
                });
            } else {
                tip.error('网络错误');
            }
        };

        // events = {
        //     // 改变地址,供子组件调用
        //     changeAddr(addr){
        //         console.log(addr);
        //         this.address = [addr];
        //         this.hasAddress = true;
        //         this.$apply();
        //     }
        // };

        // 改变地址,供子组件调用
        changeAddr(addr){
            this.address = [addr];
            this.hasAddress = true;
            this.$apply();
        }

    }
</script>