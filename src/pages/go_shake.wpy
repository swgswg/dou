<template>
    <view class="leg-shake" style="width:{{750*px2rpxWidth}}px;height:{{1100*px2rpxHeight}}px">
        <image class="open-room" style="width:{{89*px2rpxWidth}}px;height:{{82*px2rpxWidth}}px;" src="{{open_room}}" @tap.stop="openRoom"></image>
        
        <!--签到 start-->
        <view class="sign" style="width:{{80*px2rpxWidth}}px;height:{{40*px2rpxWidth}}px;" @tap.stop="goSignIn">签到</view>
        <!--签到 end-->
        
        <view class="leg-hand" style="margin-top:{{32*px2rpxWidth}}px;">
            <shakestyle :shake.sync="shakeData"></shakestyle>
        </view>
        <view class="centent" style="height:{{500*px2rpxHeight}}px;margin-top:{{73*px2rpxHeight}}px;padding-left:{{30*px2rpxWidth}}px;" @tap.stop="getClickNumber">
            <image class="content-img-left" style="width:{{58*px2rpxWidth}}px;height:{{101*px2rpxWidth}}px;margin-right:{{37*px2rpxWidth}}px;" src="{{leftImg}}" @tap.stop="shakeTransform"/>
            <circle :imgSrc.sync = "imgSrcData" :locationUrl.sync="locationUrl"></circle>
            <image class="content-img-right" style="width:{{58*px2rpxWidth}}px;height:{{101*px2rpxWidth}}px;margin-left:{{37*px2rpxWidth}}px;" src="{{rightImg}}" @tap.stop="shakeTransform"/>
        </view>
        <block wx:if="{{shakeData == 1}}">
            <view class="shake-number" style="margin-top:{{56*px2rpxHeight}}px">{{shakeLegNumber}}</view>
        </block>
        <block wx:if="{{shakeData == 0}}">
            <view class="shake-number">{{shakeHandNumber}}</view>
        </block>
        <!--<view class="shake-time" style="margin-top:{{100*px2rpxHeight}}px">持续时长：{{shakeTime}}</view>-->
        <view class="cover-layer" style="width:{{750*px2rpxWidth}}px;height:{{1110*px2rpxHeight}}px;" wx:if="{{isShowCoverLayer}}">

            <block wx:if="{{showScoreEnough}}">
                <scoreenough :nowScore.sync="nowScore" :exchangeGiftName="exchangeGiftName" :exchangeGiftUrl.sync="exchangeGiftUrl" :shareUserId.sync="shareUserId" :shareGiftId.sync="shareGiftId" :sharePage.sync="sharePage"></scoreenough>
            </block>

            <block wx:if="{{showSignIn}}">
                <signin :signDayData.sync="signDayData"></signin>
            </block>

        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import {SHAKE_HAND_TIME, SHAKE_HAND_NUMBER, USER_INFO, PX_TO_RPX, SHAKE_LEG_TIME, SHAKE_LEG_NUMBER} from '@/utils/constant';
    import imgApi from '@/utils/imgApi';
    import api from '@/utils/api';
    import util from '@/utils/util';
    import tip from '@/utils/tip';
    import ShakeStyle from '@/components/shake_style';
    import Circle from '@/components/circle';
    import ScoreEnough from '@/components/score_enough';
    import SignIn from '@/components/sign_in';

    export default class GoShake extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: '抖腿大乐斗',
            disableScroll: true,
        };

        // 声明页面中所引用的组件，或声明组件中所引用的子组件
        components = {
            shakestyle:ShakeStyle,
            circle:Circle,
            scoreenough:ScoreEnough,
            signin:SignIn
        };

        // 页面所需数据均需在这里声明，可用于模板数据绑定
        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
            open_room:imgApi.open_room,
            leftImg:imgApi.to_left,
            rightImg:imgApi.to_right,
            userInfo:null,
            shareId:null,
            // 点击图片跳转(此处不需要跳转)
            locationUrl:null,
            // 抖动方式,默认抖腿(0手动,1脚动)
            shakeData:1,
            // 默认抖动方式对应的图片
            imgSrcData:imgApi.leg_shake,
            // 抖动次数
            // shakeNumber:0,
            shakeLegNumber:0,
            shakeHandNumber:0,
            // 抖动时间
            shakeHandTime:0,
            // 脚/手抖动的总次数
            shakeLegTotal:0,
            shakeHandTotal:0,
            // 是否显示遮盖层
            isShowCoverLayer:false,
            // 显示积分达到
            showScoreEnough:false,
            // 显示签到
            showSignIn:false,
            // 当前可兑换积分
            nowScore:0,
            // 兑换积分的礼物名称
            exchangeGiftName:'aaaaaaa',
            // 兑换积分的礼物图片
            exchangeGiftUrl:'',
            // 分享人的id
            shareUserId:null,
            shareGiftId:null,
            // 当前分享页
            sharePage:'go_shake',
            // 判断积分到达的次数
            handNumEnough5: 5,
            handNumEnough7: 7,
            handNumEnough36: 36,
            legNumEnough20: 20,
            legNumEnough50: 50,
            legNumEnough129: 129,
            // 签到数据
            signDayData:null,
        };

        // 在Page和Component共用的生命周期函数
        async onLoad(options) {

            let px2rpx = await wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;

            // 获取用户信息
            let userInfo = await wepy.getStorageSync(USER_INFO);
            this.userInfo = userInfo;
            this.shareUserId = userInfo.id;
            this.$apply();

            // 通过转发进来的建立好友关系
            if(!util.isEmpty(options.share)){
                let shareId = options.share;
                console.log(shareId);
                await api.inviteFriend({
                    query:{
                        userId:userInfo.id,
                        weChat:shareId,
                    }
                });
            }
        };

        // 只在Page中存在的页面生命周期函数
        onShow() {

        };

        // 只在Page中存在的页面生命周期函数
        async onReady() {
            let that = this;
            // // 手动抖动
            // let that = this;
            // let shakeHandTime = wepy.getStorageSync(SHAKE_HAND_TIME);
            // // console.log(shakeHandTime);
            // shakeHandTime = util.secondToHMS(shakeHandTime);
            // that.shakeHandTime = shakeHandTime;
            // that.$apply();
            // console.log(this.userInfo);

            // 获取手/脚的抖动的总记录数
            let res = await api.getUserData({
                query:{
                    userId:that.userInfo.id,
                }
            });
            if(res.data.state == 1){
                this.shakeLegTotal = res.data.data.jShakeNum;
                this.shakeHandTotal = res.data.data.sShakeNum;
                console.log('shakeLegTotal=='+res.data.data.jShakeNum);
                console.log('shakeHandTotal=='+res.data.data.sShakeNum);
                this.$apply();
            } else {
                tip.error('网络错误');
            }

        };

        // 转发
        onShareAppMessage(){
            let that = this;
            return {
                title: '赶快来挑战吧',
                path: '/page/go_shake?share='+that.userInfo.id
            }
        };

        // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
        methods = {
            // 点击左右图片按钮进行转换
            shakeTransform(){
                // 获取想要抖动样式 左腿右手
                let shake = this.shakeData;
                if(shake == 0){
                    shake = 1;
                } else if(shake == 1){
                    shake = 0;
                }
                this.shakeData = shake;
                this.$apply();
            },

            // 手动点击,获取点击次数
            getClickNumber(e){
                let shakeHandNumber = this.shakeHandNumber;
                if(this.shakeData == 0){
                    shakeHandNumber++;
                    this.shakeHandNumber = shakeHandNumber;
                    this.$apply();
                    wepy.setStorageSync(SHAKE_HAND_NUMBER,shakeHandNumber);

                    // 手动抖动次数 25000/5积分礼物   35000/7积分礼物   180000/36积分礼物
                    // 脚动抖动次数 20000/20积分礼物  50000/50积分礼物  129000/129积分礼物(待写)
                    if( (this.shakeHandTotal + shakeHandNumber) == (this.handNumEnough5*5000) ){
                        this.isExchangeScore(this.handNumEnough5);

                    } else if( (this.shakeHandTotal + shakeHandNumber) == (this.handNumEnough7*5000) ){
                        this.isExchangeScore(this.handNumEnough7);

                    } else if( (this.shakeHandTotal + shakeHandNumber) == (this.handNumEnough36*5000) ){
                        this.isExchangeScore(this.handNumEnough36);
                    }
                }
            },

            // 开设房间
            openRoom(){

                let that = this;
                wepy.navigateTo({
                    url: '/pages/loading?game='+that.shakeData,
                });
            },

            // 签到
            async goSignIn(){
                // 显示遮盖层
                this.isShowCoverLayer = true;
                // 显示签到
                this.showSignIn = true;
                // 获取签到设定的礼物
                let res = await api.getSignGift({
                    query:{}
                });
                if(res.data.state == 1){
                    // console.log(res.data.data);
                    this.signDayData = res.data.data;
                } else {
                    tip.error('网络错误')
                }
                this.$apply();
            },
        };

        watch = {
            shakeData(newValue,oldValue){
                // console.log(newValue)
                this.shakeChange(newValue);
            },
        };

        events = {
            // 取消遮盖层
            cancelCoverLayer(){
               this.hideAllShowModel();
            },
        };

        // 抖动方式改变
        shakeChange(shake){
            if(shake == 1){
                // 腿抖
                this.imgSrcData = imgApi.leg_shake;
                this.shakeData = 1;
                this.$apply();

            } else if (shake == 0){
                // 手抖
                this.imgSrcData = imgApi.hand_shake;
                this.shakeData = 0;

                // 获取缓存中手抖的信息
                // let shakeHandTime = wepy.getStorageSync(SHAKE_HAND_TIME);
                let shakeHandNumber = wepy.getStorageSync(SHAKE_HAND_NUMBER);
                // console.log(shakeHandTime);
                // shakeHandTime = util.secondToHMS(shakeHandTime);
                // this.shakeHandTime = shakeHandTime;
                this.shakeHandNumber = shakeHandNumber;

                this.$apply();
            }
        }

        // 手动达到积分兑换
        async isExchangeScore(myscore){
            let that = this;
            // 根据积分获取礼物信息
            let res = await api.getOneGiftInfoByScore({
                query:{
                    score:myscore,
                }
            });
            console.log(res);
            if(res.data.state == 1){
                this.isShowCoverLayer = true;
                this.showScoreEnough = true;
                this.nowScore = myscore;
                this.exchangeGiftName = res.data.data.name;
                this.exchangeGiftUrl = res.data.data.phone;
                this.shareGiftId = res.data.data.id;
                this.$apply();

                // 添加相应的礼物
                let data = await api.addUserGift({
                    query:{
                        userId: that.userInfo.id,
                        giftId: res.data.data.id,
                        num:1
                    }
                });

            } else {
                tip.error('网络错误');
            }
        };

        // 隐藏遮盖层里的所有控件
        hideAllShowModel(){
            // 是否显示遮盖层
            this.isShowCoverLayer = false;
            // 显示积分达到
            this.showScoreEnough = false;
            // 显示签到
            this.showSignIn = false;
            this.$apply();
        }

    }
</script>

<style lang="less">
    page{
        background: linear-gradient(to top right,#ec2c98, #f68668);
    }

    .leg-shake{
        position: relative;
        display: flex;
        flex-direction: column;
        /*align-items: center;*/
        width: 100%;
        height: 100%;

        /*开设房间*/
        .open-room{
            position: absolute;
            top: 50rpx;
            right: 24rpx;
            /*width: 89rpx;*/
            /*height: 82rpx;*/
        }
        
        /* 签到 */
        .sign{
            position: absolute;
            top: 10rpx;
            left: 10rpx;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 26rpx;
            color: #fff;
            border: 1rpx solid #fff;
            border-radius: 10rpx;
        }
        
        .leg-hand{
            /*margin-top: 32rpx;*/
        }

        .centent{
            display: flex;
            justify-content: flex-start;
            align-items: center;
            width: 100%;
            /*height: 500rpx;*/
            /*margin-top: 73rpx;*/
            /*padding-left: 30rpx;*/
            box-sizing: border-box;
            /*border: 1rpx solid blue;*/

            .content-img-left,.content-img-right{
                /*width: 58rpx;*/
                /*height: 101rpx;*/
                /*border: 1rpx solid blue;*/
            }

            .content-img-left{
                /*margin-right: 37rpx;*/
            }
            .content-img-right{
                /*margin-left: 37rpx;*/
            }
        }

        .shake-number{
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            /*margin-top: 56rpx;*/
            font-size: 149rpx;
            font-family: 'Edo SZ';
            font-weight: normal;
            font-style: normal;
            color: #fff;
        }

        .shake-time{
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            /*margin-top: 100rpx;*/
            font-size: 36rpx;
            font-family: AdobeHeitiStd Regular;
            color: #fff;
        }

        /*遮盖层*/
        .cover-layer{
            position: absolute;
            top:0;
            left: 0;
            z-index: 9999;
            display: flex;
            justify-content: center;
            align-items: center;
            background: rgba(0,0,0,0.5);
        }
    }

</style>