// pages--游戏-房主
<style lang="less">

</style>
<template>
    <view>
        <game :roomId.sync="roomId"
              :legOrHand.sync="legOrHand"
              :readyOrStartBtn.sync="readyOrStartBtn"
              :stageDataLeft.sync="stageDataLeft"
              :stageDataCenter.sync="stageDataCenter"
              :stageDataRight="stageDataRight"
              :hasTimeConfirmBtn.sync="hasTimeConfirmBtn"
              :selectTimeIndex.sync="selectTimeIndex"
              :isCountDownNum.sync="isCountDownNum"
              :countdownStart.sync="countdownStart"
        >
        </game>


    </view>
</template>

<script>
    import wepy from 'wepy';
    import {PX_TO_RPX,USER_INFO,GAME_USER } from '@/utils/constant';
    import imgApi from '@/utils/imgApi';
    import api from '@/utils/api';
    import tip from '@/utils/tip';
    import util from '@/utils/util';
    import socketServer from '@/utils/socketServer';
    import wsDataDeal from '@/utils/wsDataDeal';

    import Game from '@/components/game';

    let userInfo = null;
    let start_btn = imgApi.start_btn;
    let leftReady = false;
    let rightReady = false;

    export default class PKModelMaster extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: 'PK模式',
            disableScroll: true,
            enablePullDownRefresh:false,
        };

        components = {
            game:Game,
        };

        data = {
            widWidth:0,
            widHeight:0,
            px2rpxWidth:0,
            px2rpxHeight:0,

            roomId:null,
            legOrHand:null,
            // 房主是开始按钮
            readyOrStartBtn:start_btn,
            // 房主需要时间的确定按钮
            hasTimeConfirmBtn:true,

            stageDataLeft:{userId:'', roomId:'', legOrHand:'', logo:'', photo:'', isLight:1,shakeHandNum:'邀请好友'},
            // stageDataLeft:{userId:'1' , roomId:'', legOrHand:'', logo:'', photo:'', isLight:2, shakeHandNum:'邀请好友'},
            stageDataCenter:{userId:'',roomId:'', legOrHand:'', logo:'', photo:'', isLight:2,shakeHandNum:'邀请好友'},
            stageDataRight:{userId:'', roomId:'', legOrHand:'', logo:'', photo:'', isLight:1,shakeHandNum:'邀请好友'},
            // stageDataRight:{userId:'1' ,roomId:'', legOrHand:'', logo:'', photo:'', isLight:2, shakeHandNum:'邀请好友'},
            selectTimeIndex:[0,0,0],

            // 3-2-1倒计时是否显示
            isCountDownNum:false,

            // 游戏时间倒计时开始
            countdownStart:false,
        };

        onLoad(options) {
            userInfo = wepy.getStorageSync(USER_INFO);
            let px2rpx = wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;
            this.widWidth = px2rpx.originalWidth;
            this.widHeight = px2rpx.originalHeight;

            this.roomId = options.roomId;
            this.legOrHand = options.legOrHand;

            // 房主从创建房间进来的 有确定时间按钮
            this.hasTimeConfirmBtn = true;
            this.$apply();

        };

        onReady() {
            let that = this;
            // 设置是否保持常亮状态。仅在当前小程序生效，离开小程序后设置失效。
            wx.setKeepScreenOn({
                keepScreenOn:true
            });

            // 连接webSocket
            socketServer.wsInit(userInfo.id, ()=>{
                // 开启心跳
                // this.$broadcast('heartbeatEvents');
            },(data)=>{

                // if(data){
                //     // 这次有数据,取消这次心跳
                //     this.$broadcast('cancelHeartbeatEvents');
                // }
                wsDataDeal.wsDeal(data, that, userInfo.id, '', true);
            });
            // 开启心跳
            // this.$broadcast('cancelHeartbeatEvents');
        };

        // 转发
        onShareAppMessage() {
            let roomId = this.roomId;
            let legOrHand = this.legOrHand;
            // console.log('/pages/PK_model_slave?share=' + userInfo.id + '&roomId=' + roomId + '&legOrHand=' + legOrHand)
            // 来自页面内转发按钮
            return {
                title: '一起来战吧',
                path: '/pages/PK_model_slave?share=' + userInfo.id + '&roomId=' + roomId + '&legOrHand=' + legOrHand
            }
        }

        events = {
            // 确定时间
            confirmTimeEvents(strTime){
                this.updateRoomTimeE(strTime);
            },

            // 房主开始按钮
            readyOrStartE(){
                this.startGameE();
            },

            // 倒计时结束
            isOverCountDownEvents(){
                this.isOverCountDownE();
            }
        };

        // 房主默认已经准备,点击开始按钮,开始游戏
        startGameE(){
            // 时间已经选择 false为选择了时间
            if(this.hasTimeConfirmBtn){
                tip.alert('请选择时间');
                return;
            }
            //所有组员都准备好
            if( !this.allReady() ){
                return;
            }

            this.updateRoomE();
            // 开始游戏
            this.$broadcast('countDownNum321Events');
        }

        // 所有人都准备好
        allReady(){
            // 左边玩家
            if(this.stageDataLeft.userId){
                if(this.stageDataLeft.isLight == 2){
                    leftReady = true;
                } else {
                    leftReady = false;
                }
            } else {
                leftReady = false;
            }

            // 右边玩家
            if(this.stageDataRight.userId){
                if(this.stageDataRight.isLight == 2){
                    rightReady = true;
                } else {
                    rightReady = false;
                }
            } else {
                rightReady = true;
            }

            if(leftReady && rightReady){
                return true;
            } else {
                tip.alert('还有玩家没准备');
                return false;
            }
        }

        // 倒计时结束
        isOverCountDownE(){
            this.readyBtn = start_btn;
            this.updateGroupUserInit();
            // 倒计时结束
            // this.$broadcast('stopCountDown');
        }

        // 确定时间
        async updateRoomTimeE(strTime){
            let roomId = this.roomId;
            let time = this.selectTimeIndex[0]+'#'+this.selectTimeIndex[1]+'#'+this.selectTimeIndex[2];
            await api.updateRoomTime({
                query:{
                    roomId: roomId,
                    time: time,
                    time1: strTime
                }
            });
        }

        start(){}

        // 房主开始游戏
        async updateRoomE(){
            let roomId = this.roomId;
            let res = await api.updateRoom({
                query:{
                    roomId: roomId
                }
            });
            if(res.data.state == 1){
                // console.log(res.data);
                // 把游戏人物id存入缓存
                wepy.setStorageSync(GAME_USER, res.data.data);
            }
        }

        // 房主退出,房间取消
        masterOut(){}

        // 游戏结束修改玩家准备状态
        updateGroupUserInit(){
            this.stageDataLeft.isLight = 1;
            this.stageDataLeft.shakeHandNum = 0;
            this.stageDataRight.isLight = 1;
            this.stageDataRight.shakeHandNum = 0;
            this.$apply();
        }

    }
</script>
