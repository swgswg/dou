// pages--游戏-房主
<style lang="less">

</style>
<template>
    <view>
        <game :roomId.sync="roomId"
              :legOrHand.sync="legOrHand"
              :readyOrStartBtn.sync="readyOrStartBtn"
              :stageDataLeft.sync="stageDataLeft"
              :stageDataCenter.sync="stageDataCenter"
              :stageDataRight="stageDataRight"
              :hasTimeConfirmBtn.sync="hasTimeConfirmBtn"
              :selectTimeIndex.sync="selectTimeIndex"
              :isCountDownNum.sync="isCountDownNum"
              :countdownStart.sync="countdownStart"
        >
        </game>


    </view>
</template>

<script>
    import wepy from 'wepy';
    import {PX_TO_RPX,USER_INFO } from '@/utils/constant';
    import imgApi from '@/utils/imgApi';
    import api from '@/utils/api';
    import tip from '@/utils/tip';
    import weixin from '@/utils/weixin';
    import util from '@/utils/util';
    import socketServer from '@/utils/socketServer';
    import wsDataDeal from '@/utils/wsDataDeal';

    import Game from '@/components/game';

    let userInfo = null;
    let no_start_btn = imgApi.no_start_btn;
    let start_btn = imgApi.start_btn;
    let clear_set = null;
    let leftReady = false;
    let rightReady = false;

    export default class PKModelMaster extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: 'PK模式',
            disableScroll: true,
            enablePullDownRefresh:false,
        };

        components = {
            game:Game,
        };

        data = {
            widWidth:0,
            widHeight:0,
            px2rpxWidth:0,
            px2rpxHeight:0,

            roomId:null,
            legOrHand:null,
            // 房主是开始按钮
            readyOrStartBtn:start_btn,
            // 房主需要时间的确定按钮
            hasTimeConfirmBtn:true,

            stageDataLeft:{userId:'', roomId:'', legOrHand:'', logo:'', photo:'', isLight:1,shakeHandNum:'邀请好友'},
            stageDataCenter:{userId:'',roomId:'', legOrHand:'', logo:'', photo:'', isLight:2,shakeHandNum:'邀请好友'},
            stageDataRight:{userId:'', roomId:'', legOrHand:'', logo:'', photo:'', isLight:1,shakeHandNum:'邀请好友'},

            selectTimeIndex:[0,0,0],

            // 3-2-1倒计时是否显示
            isCountDownNum:false,

            // 游戏时间倒计时开始
            countdownStart:false,
        };

        onLoad(options) {
            userInfo = wepy.getStorageSync(USER_INFO);
            let px2rpx = wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;
            this.widWidth = px2rpx.originalWidth;
            this.widHeight = px2rpx.originalHeight;

            this.roomId = options.roomId;
            this.legOrHand = options.legOrHand;

            // 房主从创建房间进来的 有确定时间按钮
            this.hasTimeConfirmBtn = true;
            this.$apply();

        };

        onReady() {
            let that = this;
            // 设置是否保持常亮状态。仅在当前小程序生效，离开小程序后设置失效。
            wx.setKeepScreenOn({
                keepScreenOn:true
            });

            // 连接webSocket
            socketServer.wsInit(userInfo.id, (data)=>{
                console.log(data);
                wsDataDeal.wsDeal(data, that, (group)=>{
                    console.log('group============')
                    console.log(group);
                    let arrs = this.dealGroupDataE(group);
                    console.log(arrs);
                    if(arrs[0]){
                        this.updateStageLeftDateE( arrs[0]);
                    }
                    if(arrs[1]){
                        this.updateStageRightDateE(arrs[1]);
                    }
                },(newTime)=>{
                    // 游戏时间
                }, (readyData)=>{
                    // 组员准备
                    that.slaveReadyE(readyData);
                });

            });
        };

        // 转发
        onShareAppMessage(res) {
            if ( res.from === 'menu' ) {
                // 来自页面内转发按钮
                return {
                    title: '一起来战吧',
                    path: '/page/PK_model_slave?share=' + userInfo.id + '&roomId=' + roomId + '&legOrHand=' + legOrHand
                }
            }
        }

        watch = {
            selectTimeIndex(newvalue){
                console.log(newvalue);
            }
        };

        events = {
            // 确定时间
            confirmTimeEvents(strTime){
                this.updateRoomTimeE(strTime);
            },

            // 房主开始按钮
            readyOrStartE(){
                this.startGameE();
            },

            // 倒计时结束
            isOverCountDownEvents(){
                this.isOverCountDownE();
            }
        };

        // 去掉用户组里自己的信息
        dealGroupDataE(arrayData){
            let data = [];
            let len = arrayData.length;
            for(let i = 0; i < len; i++){
                if(arrayData[i].userId != userInfo.id){
                    data.push(arrayData[i]);
                }
            }
            return data;
        }

        // 把房间人物信息绑定到左边舞台
        updateStageLeftDateE(groupInfo){
            let that = this;
            for(let k in groupInfo){
                that.stageDataLeft[k] = groupInfo[k];
            }
            this.$apply();
        }
        // 把房间人物信息绑定到右边舞台
        updateStageRightDateE(groupInfo){
            let that = this;
            for(let k in groupInfo){
                that.stageDataRight[k] = groupInfo[k];
            }
            this.$apply();
        }

        // 房主默认已经准备,点击开始按钮,开始游戏
        startGameE(){
            // 时间已经选择 false为选择了时间
            if(this.hasTimeConfirmBtn){
                return;
            }
            //所有组员都准备好
            if( !this.allReady() ){
                return;
            }
            // 开始游戏
            this.$broadcast('countDownNum321Events');
        }

        // 所有人都准备好
        allReady(){
            // 左边玩家
            if(this.stageDataLeft.userId){
                if(this.stageDataLeft.isLight == 2){
                    leftReady = true;
                } else {
                    leftReady = false;
                }
            } else {
                leftReady = false;
            }

            // 右边玩家
            if(this.stageDataRight.userId){
                if(this.stageDataRight.isLight == 2){
                    rightReady = true;
                } else {
                    rightReady = false;
                }
            } else {
                rightReady = true;
            }

            if(leftReady && rightReady){
                return true;
            } else {
                tip.alert('还有玩家没准备');
                return false;
            }
        }

        // 倒计时结束
        isOverCountDownE(){
            this.readyBtn = start_btn;
        }

        // 确定时间
        async updateRoomTimeE(strTime){
            let roomId = this.roomId;
            let time = this.selectTimeIndex[0]+'#'+this.selectTimeIndex[1]+'#'+this.selectTimeIndex[2];
            await api.updateRoomTime({
                query:{
                    roomId: roomId,
                    time: time,
                    time1: strTime
                }
            });
        }

        // 同步组员准备
        slaveReadyE(readyData){
            let that = this;
            readyData.forEach(function(item) {
                if(item.userId == that.stageDataRight.userId){
                    that.stageDataRight.isLight = item.status;
                } else if(item.userId == that.stageDataLeft.userId){
                    that.stageDataLeft.isLight = item.status;
                } else if(item.userId == that.stageDataCenter.userId){
                    that.stageDataCenter.isLight = item.status;
                }
                that.$apply();
            });

        }

    }
</script>
