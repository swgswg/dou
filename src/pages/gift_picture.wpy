// page--礼物墙照片
<template>
    <view class="gift-picture">
        <!--tab选项 start-->
        <view class="tab" style="height:{{88*px2rpxHeight}}px;padding:0 {{100*px2rpxWidth}}px;">
            <view class="tab-each {{currentTab == 0 ? 'active' : ''}}" style="width:{{180*px2rpxWidth}}px;height:{{85*px2rpxHeight}}px;" data-current="0" @tap.stop="switchTab">收到礼物</view>
            <view class="tab-each {{currentTab == 1 ? 'active' : ''}}" style="width:{{180*px2rpxWidth}}px;height:{{85*px2rpxHeight}}px;" data-current="1" @tap.stop="switchTab">送出礼物</view>
        </view>
        <!--tab选项 end-->

        <!--图片 start-->
        <!--<view class="picture" style="height:{{showAllSelect ? 1010*px2rpxHeight : 1110*px2rpxHeight}}px">-->
        <view class="picture" style="height:{{1110*px2rpxHeight}}px;padding:{{20*px2rpxHeight}}px {{20*px2rpxWidth}}px 0 {{20*px2rpxWidth}}px;">
            <scroll-view scroll-y bindscrolltolower="scrollToLower">
                <!--<block wx:for="{{pictureList}}" wx:for-item="{{picture}}" wx:key="{{index}}">-->
                <block wx:for="{{giftList}}" wx:for-item="list" wx:key="{{index}}">
                    <view class="picture-each" style="width:{{216*px2rpxWidth}}px;height:{{269*px2rpxHeight}}px;margin-right:{{10*px2rpxWidth}}px">
                        <!--<view class="picture-each-content" style="width:{{216*px2rpxWidth}}px;height:{{269*px2rpxHeight}}px;">-->
                            <!--<view wx:if="{{showAllSelect}}" class="check {{checked ? 'ischeck' : ''}}" style="width:{{30*px2rpxWidth}}px;height:{{30*px2rpxWidth}}px" data-index="{{index}}" @tap.stop="selectPicture">-->
                                <!--<text wx:if="{{checked}}" class="iconfont icon-check" style="margin-left:{{5*px2rpxWidth}}px;"></text>-->
                            <!--</view>-->
                            <!--<image class="img" style="width:{{216*px2rpxWidth}}px;height:{{269*px2rpxHeight}}px" src="" data-url="{{}}" data-index="{{index}}" @tap.stop="preview"></image>-->
                        <!--</view>-->
                        <view class="picture-each-content" style="width:{{216*px2rpxWidth}}px;height:{{269*px2rpxHeight}}px;">
                            <!--<block wx:if="{{list.slt}}">-->
                                <!--<image class="img" style="width:{{216*px2rpxWidth}}px;height:{{269*px2rpxHeight}}px" src="{{fileUrl + list.slt}}" ></image>-->
                            <!--</block>-->
                            <!--<block wx:else>-->
                                <!--<image class="img" style="width:{{216*px2rpxWidth}}px;height:{{269*px2rpxHeight}}px" src="{{fileUrl + list.logo}}" ></image>-->
                            <!--</block>-->
                            <image class="img" style="width:{{216*px2rpxWidth}}px;height:{{269*px2rpxHeight}}px" src="{{fileUrl + list.url}}" ></image>
                            <view class="info" style="height:{{50*px2rpxHeight}}px;padding:0 {{10*px2rpxWidth}}px;">
                                <image src="{{list.photo}}" style="width:{{40*px2rpxWidth}}px;height:{{40*px2rpxWidth}}px;"></image>
                                <view class="info-right">
                                    <image src="{{energy}}" style="width:{{11*px2rpxWidth}}px;height:{{13*px2rpxWidth}}px;margin-right:{{5*px2rpxWidth}}px;"></image>
                                    <view>{{list.score}}</view>
                                </view>
                            </view>
                        </view>
                    </view>
                </block>
                <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
                <!--暂无数据显示-->
                <block wx:if="{{receive_is_empty && currentTab == 0}}">
                    <placeholder :show.sync="receive_is_empty" message="您还没有图片哦"></placeholder>
                </block>
                <block wx:if="{{send_is_empty && currentTab == 1}}">
                    <placeholder :show.sync="send_is_empty" message="您还没有图片哦"></placeholder>
                </block>
            </scroll-view>
        </view>
        <!--图片 end-->

        <!--底部按钮 start-->
        <!--<block wx:if="{{currentTab == 0}}">-->
            <!--<view class="btn" wx:if="{{showAllSelect}}">-->
                <!--<view class="edit">编辑</view>-->
                <!--<view class="btn-each button button-highlight button-rounded" @tap.stop="save">保存</view>-->
                <!--<view class="btn-each button button-rounded" @tap.stop="deleteImg">删除</view>-->
            <!--</view>-->
        <!--</block>-->
        <!--底部按钮 end-->

    </view>
</template>

<script>
    import wepy from 'wepy';
    import api from '@/utils/api';
    import tip from '@/utils/tip';
    import util from '@/utils/util';
    import imgApi from '@/utils/imgApi';
    import { USER_INFO,PX_TO_RPX } from '@/utils/constant';
    import BottomLoadMore from "@/components/common/bottomLoadMore";
    import Placeholder from "@/components/common/placeholder";

    export default class MyPage extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: 'VIP礼物墙'
        };

        // 声明页面中所引用的组件，或声明组件中所引用的子组件
        components = {
            bottomLoadMore: BottomLoadMore,
            placeholder: Placeholder,
        };

        // 页面所需数据均需在这里声明，可用于模板数据绑定
        data = {
            fileUrl:imgApi.fileUrl,
            energy:imgApi.energy,
            px2rpxWidth:0,
            px2rpxHeight:0,
            tabList:['收到礼物','送出礼物'],
            currentTab:0,
            // 是否显示全选按钮
            //showAllSelect:true,
            // 编辑/取消
            //editOrCancel:'编辑',
            userId:null,
            //checked:false,
            // 图片所有地址
            //urlAllList:[],
            // true全选/false全不选
            //flag:true,
            giftList:null,
            // 收到
            receive_is_empty: true,
            receive_giftList:null,
            receive_page:1,
            receive_pageSize:20,
            receive_isLastPage:false,
            receive_currentPage:0,
            // 送出
            send_is_empty:true,
            send_giftList:null,
            send_page:1,
            send_pageSize:20,
            send_isLastPage:false,
            send_currentPage:0,

            showLoading: false,

        };

        // 在Page和Component共用的生命周期函数
        async onLoad(){
            let px2rpx = await wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;

            let userInfo = await wepy.getStorageSync(USER_INFO);
            this.userId = userInfo.id;
            this.$apply();
        };

        // 只在Page中存在的页面生命周期函数
        onShow() {
        };

        // 只在Page中存在的页面生命周期函数
        onReady() {
            // 默认收到礼物
            this.get_qSPresentsWall(this.receive_page,this.receive_pageSize);
        };

        // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
        methods = {
            switchTab(e){
                let current = e.currentTarget.dataset.current;
                this.currentTab = current;
            },


            // 编辑或者取消
            editOrCancelEvent(){
                if(this.editOrCancel == '编辑'){
                    this.showAllSelect = true;
                    this.editOrCancel = '取消';
                } else if(this.editOrCancel == '取消'){
                    this.showAllSelect = false;
                    this.editOrCancel = '编辑';
                }
            },

            // 全选
            selectAllPicture(){
                let pictureList = this.pictureList;
                let flag = this.flag;
                let len = pictureList.len;
                for(let i = 0; i < len; i++){
                    pictureList[i].checked = flag;
                }
                this.flag = !flag;
            },

            // 选中图片
            selectPicture(e){
                // let index = e.currentTarget.dataset.index;
                // // console.log(e);
                // let pictureList = this.pictureList;
                // let checked = pictureList[index].checked;
                // pictureList[index].checked = !checked;
                // this.pictureList = pictureList;
                // this.$apply();
            },

            // 预览图片
            preview(e){
                // let index = e.currentTarget.dataset.index;
                // let urlList = this.urlList;
                // wx.previewImage({
                //     current: urlLIst[index], // 当前显示图片的http链接
                //     urls: urlList            // 需要预览的图片http链接列表
                // })
            },

            // 保存图片
            save(){
                // let pictureList = this.pictureList;
                // let len = pictureList.length;
                // let urlSelectList = [];
                // for(let i = 0; i < len; i++){
                //     if(pictureList[i].checked){
                //         urlSelectList.push(pictureList[i].url);
                //     }
                // }
                // api.downloadSaveFiles(urlSelectList);
            },

            // 删除图片
            deleteImg(){
                // let pictureList = this.pictureList;
                // let len = pictureList.length;
                // for(let i = 0; i < len; i++){
                //     pictureList[i].checked = false;
                // }
                // this.pictureList = pictureList;
                // this.showAllSelect = false;
                // this.$apply();
            },

            // 滚动到底部/右边，会触发 scrolltolower 事件
            scrollToLower(){
                this.showLoading = true;
                if(currentTab == 0){
                    // 收到礼物
                    if(this.receive_isLastPage){
                        return;
                    }
                    let page = this.receive_page+1;
                    let pageSize = this.send_pageSize;
                    this.get_qSPresentsWall(page,pageSize);
                } else if(currentTab == 1){
                    // 送出礼物
                    if(this.send_isLastPage){
                        return;
                    }
                    let page = this.send_page+1;
                    let pageSize = this.send_pageSize;
                    this.get_qSPresentsWalls(page,pageSize);
                }
                this.$apply();
            },
        };

        watch = {
            currentTab(newVal){
                if(newVal == 0){
                    // 收到礼物
                    this.giftList = this.receive_giftList;
                    this.get_qSPresentsWall(this.receive_page,this.send_pageSize);
                } else if(newVal == 1){
                    // 送出礼物
                    this.giftList = this.send_giftList;
                    this.get_qSPresentsWalls(this.send_page,this.send_pageSize);
                }
            },
        };

        // 查询收到的礼物墙
        async get_qSPresentsWall(mypage,mypageSize){
            let userId = this.userId;
            let receive_giftList = this.receive_giftList;
            let receive_currentPage = this.receive_currentPage;
            if(util.isEmpty(receive_giftList)){
                receive_giftList = [];
            }
            let res = await api.qSPresentsWall({
                query:{
                    userId:userId,
                    page:mypage,
                    pageSize:mypageSize
                }
            });
            if(res.data.state == 1){
                let data = res.data.data.PageInfo;
                this.receive_isLastPage = data.isLastPage;
                if(receive_currentPage < data.pageNum){
                    receive_giftList = receive_giftList.concat(data.list);
                }
                this.receive_currentPage = data.pageNum;
                this.receive_giftList = receive_giftList;
                this.giftList = receive_giftList;
                if(util.isEmpty(data.list)){
                    this.receive_is_empty = true;
                } else {
                    this.receive_is_empty = false;
                }
                this.receive_page = mypage;
                this.receive_pageSize = mypageSize;
                this.showLoading = false;
            } else {
                tip.error('网络错误');
            }
            this.$apply();
        };

        // 查询送出的礼物墙
        async get_qSPresentsWalls(mypage,mypageSize){
            let userId = this.userId;
            let send_giftList = this.send_giftList;
            let send_currentPage = this.send_currentPage;
            if(util.isEmpty(send_giftList)){
                send_giftList = [];
            }
            let res = await api.qSPresentsWalls({
                query:{
                    userId:userId,
                    page:mypage,
                    pageSize:mypageSize
                }
            });
            if(res.data.state == 1){
                let data = res.data.data.PageInfo;
                this.send_isLastPage = data.isLastPage;
                if(send_currentPage < data.pageNum){
                    send_giftList = send_giftList.concat(data.list);
                }
                this.send_currentPage = data.pageNum;
                this.send_giftList = send_giftList;
                this.giftList = send_giftList;
                if(util.isEmpty(data.list)){
                    this.send_is_empty = true;
                } else {
                    this.send_is_empty = false;
                }
                this.send_page = mypage;
                this.send_pageSize = mypageSize;
                this.showLoading = false;
            } else {
                tip.error('网络错误');
            }
            this.$apply();
        };
    }
</script>

<style lang="less">
    page{
        /*background: linear-gradient(to top right,#ec2c98, #f68668);*/
    }

    .icon-check{
        font-size: 28rpx;
        color: #fff;
    }

    .gift-picture{
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        width: 100%;
        /*padding: 20rpx 20rpx;*/
        padding-bottom: 0;
        box-sizing: border-box;

        .tab{
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
            box-sizing: border-box;
            font-size: 30rpx;
            background: linear-gradient(to top right,#ec2c98, #f68668);

            .tab-each{
                display: flex;
                justify-content:center;
                align-items: center;
                color: #fff;
            }
            .active{
                border-bottom: 5px solid #fff;
            }
        }

        .select-edit{
            display: flex;
            justify-content: flex-end;
            align-items: center;
            width: 100%;
            margin-bottom: 20rpx;
        }

        .picture{
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            box-sizing: border-box;

            .picture-each{
                display:inline-block;
                box-sizing: border-box;

                .picture-each-content{
                    position: relative;
                    z-index: 0;
                    border: 1rpx solid red;

                    .info{
                        position: absolute;
                        left: 0;
                        bottom: 0;
                        z-index: 99;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                        width: 100%;
                        box-sizing: border-box;
                        background-color: rgba(0,0,0,0.5);

                        image{
                            border-radius: 50%;
                        }

                        .info-right{
                            display: flex;
                            justify-content: center;
                            align-items: center;
                            font-size: 20rpx;
                        }
                    }

                    .check{
                        position: absolute;
                        top: 10rpx;
                        left: 10rpx;
                        z-index: 10;
                        display: flex;
                        justify-content: center;
                        align-items: center;
                        background-color: #fff;
                        border: 1rpx solid red;
                    }

                    .ischeck{
                        background-color: #f68668;
                    }

                    .img{
                        position: absolute;
                        top: 0;
                        left: 0;
                        z-index: 5;
                    }
                }
            }
        }

        .btn{
            margin-top: 20rpx;
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;

            .btn-each{
                width: 48%;
            }
        }
    }
</style>