// page-VIP强
<template>
    <view class="vip-wall" style="height:{{1205*px2rpxHeight}}px;background: url({{wall_bg}}) no-repeat 0 0;" >

        <!--人物信息 start-->
        <view class="user" style="padding-top:{{16*px2rpxHeight}}px;">
            <view class="user-profile" style="width:{{96*px2rpxWidth}}px;height:{{96*px2rpxWidth}}px;">
                <image src="{{info.photo}}" style="width:{{96*px2rpxWidth}}px;height:{{96*px2rpxWidth}}px;"></image>
            </view>
            <view class="user-name" style="margin-top:{{17*px2rpxHeight}}px;">{{info.name}}</view>
            <view class="user-energy" style="margin-top:{{10*px2rpxHeight}}px;">
                <image src="{{energy}}" style="width:{{21*px2rpxWidth}}px;height:{{26*px2rpxWidth}}px;"></image>
                <view class="name-text" style="margin-left:{{10*px2rpxHeight}}px;">{{info.score}}</view>
            </view>
        </view>
        <!--人物信息 end-->

        <!--礼物墙 start-->
        <view class="wall" style="margin-top:{{15*px2rpxHeight}}px;">
            <view class="wall-content">
                <block wx:if="{{isWallOrPicture}}">
                    <showgiftwall :giftList.sync="giftList" :ratio.sync="ratio"></showgiftwall>
                </block>
                <block wx:else>
                    <image src="{{fileUrl + url}}" style="width:{{946*px2rpxWidth}}px;height:{{715*px2rpxHeight}}px;"></image>
                </block>
            </view>
        </view>
        <!--礼物墙 end-->
    </view>
</template>

<script>
    import wepy from 'wepy';
    import {PX_TO_RPX } from '@/utils/constant';
    import util from '@/utils/util';
    import tip from '@/utils/tip';
    import api from '@/utils/api';
    import imgApi from '@/utils/imgApi';
    import ShowGiftWall from '@/components/show_gift_wall';
    import BottomLoadMore from "@/components/common/bottomLoadMore"
    import Placeholder from "@/components/common/placeholder";

    export default class MyPage extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: 'VIP礼物墙',
            disableScroll:true,
        };

        // 声明页面中所引用的组件，或声明组件中所引用的子组件
        components = {
            showgiftwall:ShowGiftWall,
            bottomLoadMore: BottomLoadMore,
            placeholder: Placeholder,
        };

        // 页面所需数据均需在这里声明，可用于模板数据绑定
        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
            fileUrl:imgApi.fileUrl,
            wall_bg:imgApi.wall_bg,
            energy:imgApi.energy,
            logoWidth:131,
            logoHeight:234,
            // 礼物墙还是照片
            wallId:null,
            info:null,
            // true墙,false照片
            isWallOrPicture:true,
            giftList:null,
            ratio:1.1,
            url:null,
        };

        // 在Page和Component共用的生命周期函数
        onLoad(options) {
            let px2rpx = wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;

            if(util.isEmpty(options.wallId)){
                tip.error('网络错误');
            } else {
                this.wallId = options.wallId;
            }
            this.$apply();
        };

        // 只在Page中存在的页面生命周期函数
        onShow() {
        };

        // 只在Page中存在的页面生命周期函数
        async onReady() {
            let wallId = this.wallId;
            let res = await api.getSPresentsWallOne({
                query:{
                    presentswallId:wallId
                }
            });
            if(res.data.state == 1){
                let data = res.data.data;
                let info = {};
                info.name = data.name;
                info.photo = data.photo;
                info.score = data.score;
                this.info = info;
                if(util.isEmpty(data.url)){
                    this.isWallOrPicture = true;
                    let giftList = data.list;
                    let logo = data.logo;
                    let logoX = this.canvasWidth - this.logoWidth;
                    let logoY = this.canvasHeight - this.logoHeight;
                    giftList.unshift({giftId:-1,wide:this.logoWidth,high:this.logoHeight,xaxle:logoX,yaxle:logoY,url:logo})
                    this.giftList = giftList;
                } else {
                    this.url = data.url;
                }
            } else {
                tip.error('网络错误');
            }
        };

        // 声明计算属性（详见后文介绍）
        computed = {};

        // 声明数据watcher（详见后文介绍）
        watch = {};

        // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
        methods = {};

        // 声明组件之间的事件处理函数
        events = {};
    }
</script>

<style lang="less">
    .vip-wall{
        width: 100%;
        box-sizing: border-box;

        .user{
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            box-sizing: border-box;

            .user-profile{
                display: flex;
                justify-content: center;
                align-items: center;
                border: 4rpx solid #fed530;
                border-radius: 50%;
            }
            .user-name{
                font-size: 24rpx;
                color:#fff;
            }
            .user-energy{
                display: flex;
                justify-content:center;
                align-items: center;
                font-size: 24rpx;

                .name-text{
                    display: flex;
                    justify-content:center;
                    align-items: center;
                }
            }
        }

        .wall{
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;

            .wall-content{
                /*border-radius: 20rpx;*/
                /*border: 3rpx solid #ec2c98;*/
                /*overflow: hidden;*/
            }
        }

    }
</style>