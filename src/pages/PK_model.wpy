// page--PK模式
<style lang="less">
    .pk-model{
        .f150{
            font-size: 200rpx;
            font-weight: bolder;
        }
    }
</style>

<template>
    <view class="pr flex-column bg-repeat-size pk-model"
          style="width:{{widWidth}}px;height:{{widHeight}}px;background-image: url({{bgImg}});">
        <!--退出按钮 start-->
        <view class="pa" style="top:{{35*px2rpxHeight}}px;right:{{35*px2rpxWidth}}px;">
            <outmodel></outmodel>
        </view>
        <!--退出按钮 end-->

        <!--准备/开始按钮 start-->
        <block wx:if="{{(!isCountDownNum) && (!isDot)}}">
            <view class="flex-center w-percent100" style="margin-top:{{250*px2rpxHeight}}px;">
                <block wx:if="{{isStart}}">
                    <image src="{{startBtn}}"
                           style="width:{{307*px2rpxWidth}}px;height:{{132*px2rpxWidth}}px;"
                           @tap.stop="start">
                    </image>
                </block>
                <block wx:else>
                    <image src="{{readyBtn}}"
                           style="width:{{307*px2rpxWidth}}px;height:{{132*px2rpxWidth}}px;"
                           @tap.stop="ready">
                    </image>
                </block>
            </view>
        </block>
        <!--准备/开始按钮 end-->

        <!--3/2/1倒计时 start-->
        <block wx:if="{{isCountDownNum}}">
            <view class="flex-center w-percent100" style="margin-top:{{80*px2rpxHeight}}px;">
                <view class="flex-center cf bg-repeat-size f150"
                      style="width:{{463*px2rpxWidth}}px;height:{{481*px2rpxWidth}}px;background-image:url({{NumBg}})">
                    {{countDownNum}}
                </view>
            </view>
        </block>
        <!--3/2/1倒计时 end-->

        <!--点击按钮 start-->
        <block wx:if="{{isDot}}">
            <view class="flex-center w-percent100" style="margin-top:{{200*px2rpxHeight}}px;">
                <!--<image src="{{DotBtn}}" style="width:{{398*px2rpxWidth}}px;height:{{350*px2rpxWidth}}px;" @tap.stop="dot"></image>-->
                <touch :ratio.sync="ratio" :imgType.sync="imgType"></touch>
            </view>
        </block>
        <!--点击按钮 end-->

        <!--舞台/人物定位 start-->
        <view class="pa flex-center w-percent100" style="bottom:{{200*px2rpxHeight}}px;left:0;">
            <!--<stagetwo :stageData.sync="stageData"></stagetwo>-->
            <threestage
                    :stageDataLeft.sync="stageDataLeft" :numLeft.sync="numLeft"
                    :stageDataCenter.sync="stageDataCenter" :numCenter.sync="numCenter"
                    :stageDataRight.sync="stageDataRight" :numRight.sync="numRight"
            >
            </threestage>
        </view>
        <!--舞台/人物定位 end-->

        <!--选择时间 start-->
        <block wx:if="{{isHomeOwner}}">
            <view class="pa flex-center w-percent100"
                  style="bottom:{{40*px2rpxHeight}}px;left:0;height:{{120*px2rpxWidth}}px;">
                <selecttime :countdownStart.sync="countdownStart"
                            :hasTimeConfirmBtn.sync="hasTimeConfirmBtn"
                            :selectTimeIndex.sync="selectTimeIndex"
                            :countdownOver.sync="countdownOver"
                            :time.sync="time">
                </selecttime>
            </view>
        </block>
        <!--选择时间 end-->

        <!--遮盖层 start-->
        <view wx:if="{{showCoverLayer}}">
            <coverlayer>

                <!--游戏结束排名 start-->
                <view class="flex-center w-percent100" slot="content" wx:if="{{showGameRank}}">
                    <gamerank :ratio.sync="gameRankRatio"></gamerank>
                </view>
                <!--游戏结束排名 end-->

            </coverlayer>
        </view>
        <!--遮盖层 end-->

    </view>
</template>

<script>
    import wepy from 'wepy';
    import {PX_TO_RPX,USER_INFO } from '@/utils/constant';
    import imgApi from '@/utils/imgApi';
    import api from '@/utils/api';
    import tip from '@/utils/tip';
    import weixin from '@/utils/weixin';
    import OutModel from '@/components/out_model';
    import Touch from '@/components/touch';
    import ThreeStage from '@/components/three_stage';
    import SelectTime from '@/components/select_time';
    import GameRank from '@/components/game_rank';
    import CoverLayer from '@/components/common/cover_layer';

    let userInfo = null;
    let legOrHand = null;  // 1抖腿,0手抖
    let roomId = null;
    let isReady = false; // 有没有准备
    let no_ready_btn = imgApi.no_ready_btn;
    let ready_btn = imgApi.ready_btn;
    let no_start_btn = imgApi.no_start_btn;
    let start_btn = imgApi.start_btn;
    let shakeHandNumber = 0;
    let clear_set = null;
    let leftReady = false;
    let rightReady = false;

    export default class PKModel extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: 'PK模式',
            disableScroll: true,
            enablePullDownRefresh:false,
        };

        components = {
            outmodel: OutModel,
            touch:Touch,
            selecttime:SelectTime,
            threestage:ThreeStage,
            gamerank:GameRank,
            coverlayer:CoverLayer
        };

        data = {
            widWidth:0,
            widHeight:0,
            px2rpxWidth:0,
            px2rpxHeight:0,
            bgImg: imgApi.pk_model_bg,

            // 准备按钮/开始按钮
            readyBtn: no_ready_btn,
            isStart:false, // 房主在全部准备好才会变成准备按钮
            startBtn: no_start_btn,

            // 点击按钮
            // DotBtn: imgApi.story_btn,
            // 点击按钮是否显示
            isDot:false,
            // 按钮参数
            ratio:0.8,
            imgType:1,

            // 是不是房主(true房主/false不是房主)
            isHomeOwner:false,

            stageDataLeft:{userId:1,roomId:'',legOrHand:'', logo:'woman1.png', photo:'', isLight:1},
            numLeft:100,
            stageDataCenter:{userId:'',roomId:'',legOrHand:'', logo:'', photo:'', isLight:0},
            numCenter:200,
            stageDataRight:{userId:2,roomId:'',legOrHand:'', logo:'man2.png', photo:'', isLight:1},
            numRight:50,

            // 倒计时开始(true开始)
            countdownStart:false,
            // 选择时间确定按钮(房主有确定按钮/组员没有)
            hasTimeConfirmBtn: false,
            // 倒计时时间
            selectTimeIndex:[0,0,0],
            time:null,
            // 倒计时结束(true结束/false没有结束)
            countdownOver:false,

            // 3/2/1倒计时
            NumBg:imgApi.count_down,
            // 是否显示3/2/1倒计时
            isCountDownNum:false,
            countDownNum:3,

            // 是否显示遮盖层
            showCoverLayer:false,
            // 游戏结束排名是否显示
            showGameRank:false,
            gameRankRatio:1,
        };

        onLoad(options) {
            let px2rpx = wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;
            this.widWidth = px2rpx.originalWidth;
            this.widHeight = px2rpx.originalHeight;
            this.$apply();

            legOrHand = options.legOrHand;
            roomId = options.roomId;
            // 是不是从创建房间进来的
            if(options.homeOwner == '1'){
                this.isHomeOwner = true;
                // 房主有确定时间按钮
                this.hasTimeConfirmBtn = true;
            }
            // 通过分享进来的建立好友关系
            if(options.share){
                this.buildFriend(options.share);

                // 判断这个房间有没有满员
            }

            // 把自己的信息绑定到中间舞台
            this.updateStageDataCenter();

            // 开启webSocket
            weixin.weixinConnectSocket(userInfo.id);
            // 发送数据
            weixin.weixinsendSocketMessage('', this.stageDataCenter );
            // 接收数据
            weixin.weixinOnSocketMessage((data)=>{
                // 把左右数据绑定
                console.log(data);
            });
        };

        onShow() {

        };

        onReady() {
            // 设置是否保持常亮状态。仅在当前小程序生效，离开小程序后设置失效。
            wx.setKeepScreenOn({
                keepScreenOn:true
            });

        };

        // 转发
        onShareAppMessage(res) {
            if ( res.from === 'menu' ) {
                // 来自页面内转发按钮
                return {
                    title: '一起来战吧',
                    path: '/page/PK_model?share=' + userInfo.id + '&roomId=' + roomId + '&legOrHand=' + legOrHand
                }
            }
        }

        computed = {

        };

        watch = {
            // 房主才能出现确定时间按钮
            timeConfirm(newValue){
                if(this.isHomeOwner && newValue){
                    this.timeConfirm = true;
                }
            },

            // 都准备好房主准备按钮变开始按钮
            readyBtn(){
                if(isReady){
                    this.isStartBtn();
                }
            },

            // 倒计时结束
            countdownOver(newValue){
                if(newValue){
                    this.isOverCountDown();
                }
            }

        };

        methods = {
            // 准备
            ready(){
                if(isReady){
                    this.stageDataCenter.isLight = 0;
                    this.readyBtn = no_ready_btn;
                    isReady = false;
                } else {
                    this.stageDataCenter.isLight = 1;
                    this.readyBtn = ready_btn;
                    isReady = true;
                }
                this.$apply();
                // 发送websocket
                weixin.weixinsendSocketMessage('', this.stageDataCenter.isLight );
            },

            //开始
            start(){
                if(this.isStart && (!this.hasTimeConfirmBtn) ){
                    // 所有人物都准备好了才能开始
                    if( this.allReady() ){
                        this.countDownNum321();
                    } else {
                        tip.alert('其他玩家待准备');
                    }
                }
            },

        };

        events = {
            // 点击事件
            clickEvents(){
                // 手抖
                if( (legOrHand == 0) && (!this.hasTimeConfirmBtn) ){
                    shakeHandNumber++;
                    this.numCenter = shakeHandNumber;
                    this.$apply();
                    // 发送websocket
                    weixin.weixinsendSocketMessage('', this.numCenter );
                }
            },

            // 退出事件
            outEvents(){
                this.isOverCountDown();
            },

            // 取消遮盖层
            cancelShow(){
                this.cancelCoverlayer();
            },

            // 确定时间按钮事件调用
            startBtnEvents(){
                this.isStartBtn();
                // 把时间发给后台
                weixin.weixinsendSocketMessage('', this.selectTimeIndex );
            }
        };

        // 完善自己的舞台信息
        updateStageDataCenter(){
            // 把自己的信息绑定到中间舞台
            userInfo = wepy.getStorageSync(USER_INFO);
            this.stageDataCenter.userId = userInfo.id;
            this.stageDataCenter.logo = userInfo.logo;
            this.stageDataCenter.photo = userInfo.photo;
            this.roomId = roomId;
            this.legOrHand = legOrHand;
            this.numCenter = 0;
            this.$apply();
        }

        // 建立好友关系
        async buildFriend(share_id){
            // 通过转发进来的建立好友关系
            await api.inviteFriend({
                query:{
                    userId: userInfo.id,
                    weChat: share_id,
                }
            });
        }

        // 确定开始按钮样式开始按钮
        isStartBtn(){
            if( this.allReady()  && this.isHomeOwner){

                this.isStart = true;
                if(this.hasTimeConfirmBtn){
                    this.startBtn = no_start_btn;
                } else {
                    this.startBtn = start_btn;
                }
            } else {
                this.isStart = false;
            }
            this.$apply();
        }

        // 所有人物都准备好了才能开始(只有两个人也能开始(先把人物给左边,左边有人右边才能有人))
        allReady(){
            if(this.stageDataCenter.isLight == 0){
                return false;
            }
            if(this.stageDataLeft.userId){
                if(this.stageDataLeft.isLight == 1){
                    leftReady = true;
                } else {
                    leftReady = false;
                }
            } else {
                leftReady = false;
            }

            if(this.stageDataRight.userId){
                if(this.stageDataRight.isLight == 1){
                    rightReady = true;
                } else {
                    rightReady = false;
                }
            } else {
                rightReady = true;
            }

            if(leftReady && rightReady){
                return true;
            } else {
                return false;
            }
        }

        // 3/2/1倒计时
        countDownNum321(){
            let that =this;
            this.isCountDownNum = true;
            clear_set = setInterval(function() {
                that.countDownNum--;
                that.$apply();
                if(that.countDownNum === 0){
                    clearInterval(clear_set);
                    that.startE();
                }
            },1000);
        }

        // 开始
        startE(){
            this.isCountDownNum = false;
            this.countdownStart = true;
            this.countdownOver = false;
            this.isDot = true;
            this.$apply();
            // 发送websocket
            weixin.weixinsendSocketMessage('', this.isDot);
        }

        // 倒计时完成
        isOverCountDown(){
            // 添加游戏记录
            this.addGameRecord();
            clearInterval(clear_set);
            this.$broadcast('stopCountDown');
            this.countDownNum = 3;
            this.isCountDownNum = false;
            this.countdownStart = false;
            this.countdownOver = false;
            this.isDot = false;
            this.isStart = false;
            this.stageDataCenter.isLight = 0;
            this.readyBtn = no_ready_btn;
            isReady = false;
            leftReady = false;
            rightReady = false;
            this.$apply();
            this.gameRankE();
        }

        // 统计游戏排名
        gameRankE(){
            // let ranking = { stageDataLeft: this.numLeft ,stageDataCenter :this.numCenter, stageDataRight : this.numRight};
            // if(isString(this.numLeft)){
            //     this.numLeft = 0;
            // }
            // if(isString(this.numCenter)){
            //     this.numCenter = 0;
            // }
            // if(isString(this.numRight)){
            //     this.numRight = 0;
            // }
            let ranking = [
                {num:this.numLeft, logo:this.stageDataLeft.logo, photo:this.stageDataLeft.photo},
                {num:this.numCenter, logo:this.stageDataCenter.logo, photo:this.stageDataCenter.photo},
                {num:this.numRight, logo:this.stageDataRight.logo, photo:this.stageDataRight.photo},
            ];
            this.gameRankData = ranking;
            this.$apply();
            this.$invoke('gamerank','display',ranking);
            this.showGameRankE();
        }

        // 显示游戏排名
        showGameRankE(){
            this.showCoverLayer = true;
            this.showGameRank = true;
            this.$apply();
        }

        // 取消遮盖层
        cancelCoverlayer(){
            this.showCoverLayer = false;
            this.showGameRank = false;
            this.$apply();
        }

        // 添加游戏记录
        async addGameRecord(){
            let that = this;
            let res = await api.addRecord({
                query:{
                    userId: userInfo.id,
                    time: that.time,
                    shakeNum: shakeHandNumber,
                    // 0（自己）1（好友）
                    type: 0,
                    // 0（手动）1（脚动）
                    status: legOrHand,
                    model:api.PKModel,
                }
            });
        }

    }
</script>
