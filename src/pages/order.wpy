<template>
    <view class="order">
        <!--tab模块-->
        <view class="swiper-tab-pd">
            <tab :tabList.sync="tabList" :currentTabValue.sync="currentTabValue"></tab>
        </view>

        <!--订单列表 start-->
        <view class="order-list" style="height:{{1110*px2rpxHeight}}px">
            <scroll-view scroll-y="true" bindscrolltolower="scrollToLower">
                <orderitem :orderList.sync="orderList"></orderitem>
                <!--加载更多时动画-->
                <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
                <!--暂无数据显示-->
                <placeholder :show.sync="is_empty" message="暂无数据"></placeholder>
            </scroll-view>
        </view>
        <!--订单列表 end-->

        <!--遮盖层 start-->
        <view wx:if="{{showCoverLayer}}">
            <coverlayer>
                <!-- 申请售后 start-->
                <!--<view class="shouhou" slot="content" wx:if="{{showAfterSale}}" style="width:{{553*px2rpxWidth}}px;height:{{628*px2rpxWidth}}px;">-->
                <view class="shouhou" slot="content" style="width:{{553*px2rpxWidth}}px;height:{{628*px2rpxWidth}}px;">
                    <!--<view class="cancel" style="width:{{38*px2rpxWidth}}px;height:{{38*px2rpxWidth}}px;" @tap.stop="cancelCoverLayer">-->
                        <!--<text class="iconfont icon-close"></text>-->
                    <!--</view>-->
                    <image src="{{customer_service}}" class="img-bg" style="width:{{553*px2rpxWidth}}px;height:{{628*px2rpxWidth}}px;"></image>
                    <view class="neirong" style="margin-top:{{179*px2rpxWidth}}px;">
                        <view class="each">
                            <image style="width:{{164*px2rpxWidth}}px;height:{{164*px2rpxWidth}}px;"></image>
                        </view>
                        <view class="each weixinhao">微信号:123456789</view>
                        <view class="each direc" style="margin-top:{{40*px2rpxHeight}}px;">扫描二维码或复制微信号联系客服获取售后服务</view>
                        <view class="each fuzhi" style="margin-top:{{40*px2rpxHeight}}px;">
                            <image src="{{customer_service_btn}}" style="width:{{207*px2rpxWidth}}px;height:{{60*px2rpxWidth}}px;" @tap.stop="copyWeixinhao"></image>
                        </view>
                    </view>
                </view>
                <!-- 申请售后 end-->
            </coverlayer>
        </view>
        <!--遮盖层 end-->
    </view>
</template>

<script>
    import wepy from 'wepy';
    import {USER_INFO,PX_TO_RPX } from '@/utils/constant';
    import api from '@/utils/api';
    import imgApi from '@/utils/imgApi';
    import tip from '@/utils/tip';
    import Tab from '@/components/common/tab';
    import OrderItem from '@/components/order_item';
    import BottomLoadMore from "@/components/common/bottomLoadMore";
    import Placeholder from "@/components/common/placeholder";
    import CoverLayer from '@/components/common/cover_layer';

    // ''(全部) 0（未支付）1（待发货）2（待接收）3（完成）4（退）5（换）
    let all = api.all;
    let unpaid = api.unpaid;
    let notDelivered = api.notDelivered;
    let notReceived = api.notReceived;
    let accomplish = api.accomplish;
    let returnGoods = api.returnGoods;
    let exchangeGoods = api.exchangeGoods;

    let page = 1;
    let pageSize = 20;
    let isLastPage = false;
    let userId = null;
    export default class MyPage extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: '我的订单'
        };

        // 声明页面中所引用的组件，或声明组件中所引用的子组件
        components = {
            tab:Tab,
            orderitem:OrderItem,
            bottomLoadMore: BottomLoadMore,
            placeholder: Placeholder,
            coverlayer:CoverLayer,
        };

        // 页面所需数据均需在这里声明，可用于模板数据绑定
        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
            tabList: [
                {name:"全部", value: all},
                {name:"待支付", value: unpaid},
                {name:"待发货", value: notDelivered},
                {name:"待收货", value: notReceived},
                {name:"已完成", value: accomplish}
            ],
            // 当前状态默认为 全部
            currentTabValue: api.all,
            // 订单列表
            orderList:[],
            showLoading:false,
            is_empty:true,
            // 显示遮盖层
            showCoverLayer:false,
            // 显示售后
            showAfterSale:false,
            customer_service:imgApi.customer_service,
            customer_service_btn:imgApi.customer_service_btn,

        };

        // 在Page和Component共用的生命周期函数
        async onLoad(){
            let px2rpx = await wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;
            this.$apply();
        };

        // 只在Page中存在的页面生命周期函数
        onShow() {
            let userInfo = wepy.getStorageSync(USER_INFO);
            userId = userInfo.id;
            this.orderList = [];
            this.$apply();
            // 获取数据
            this.getOrdersData(page,page*pageSize);
        };

        // 只在Page中存在的页面生命周期函数
        onReady() {

        };

        methods = {
            // 滚动到底部/右边，会触发 scrolltolower 事件
            scrollToLower(){
                if(isLastPage){
                    tip.toast('这是最后一页了','none');
                    return;
                }
                page += 1;
                this.getOrdersData(page,pageSize);
            },

            // 取消遮盖层
            // cancelCoverLayer(){
            //     this.cancelShow();
            // },

            // 复制微信号
            copyWeixinhao(){
                // 设置系统剪贴板的内容
                wx.setClipboardData({
                    data: 'data',
                    success: function(res) {
                        tip.toast('复制成功');
                    }
                })
            }
        };

        watch = {
            currentTabValue(newValue){
                page = 1;
                pageSize = 20;
                this.orderList = [];
                this.currentTabValue = newValue;
                this.$apply();
                this.getOrdersData(page,pageSize);
            },
        };

        // 声明组件之间的事件处理函数
        events = {
            // 申请售后
            apply_after_sale(){
                this.showCoverLayer = true;
                this.showAfterSale = true;
            },

            // 刷新数据
            refreshOrderList(){
                this.orderList = [];
                this.$apply();
                this.getOrdersData(1,page*pageSize);
            },

            // 取消所有遮盖层内容
            cancelShow(){
                this.showCoverLayer = false;
                // this.showAfterSale = false;
            }
        };

        // 获取订单数据
        async getOrdersData(mypage,mypageSize){
            this.showLoading = true;
            let mystatus = this.currentTabValue;
            let res = await api.getOrders({
                query:{
                    userId: userId,
                    page: mypage,
                    pageSize: mypageSize,
                    status: mystatus
                }
            });
            if(res.data.state == 1){
                let data = res.data.data.PageInfo;
                isLastPage = data.isLastPage;
                let orderList = data.list;
                this.orderList = this.orderList.concat(orderList);
                if(this.orderList .length < 1){
                    this.is_empty = true;
                } else {
                    this.is_empty = false;
                }
            } else {
                tip.error('网络错误');
            }
            this.showLoading = false;
            this.$apply();
        };

        // 取消所有遮盖层内容
        // cancelShow(){
        //     this.showCoverLayer = false;
        //     this.showAfterSale = false;
        // }
    }
</script>

<style lang="less">
    page{
        background-color: #f0f0f0;
    }
    .order{
        .swiper-tab-pd {
            padding: 0 30rpx;
            background: #fff;
            box-sizing: border-box;
        }

        .order-list{
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
        }

        .shouhou{
            position: relative;
            display: flex;
            justify-content: center;
            align-items: flex-start;

            .cancel{
                position: absolute;
                top: 0;
                right: 0;
                z-index: 0;
                display: flex;
                justify-content: center;
                align-items: center;
                border: 1px solid #aaa;
                border-radius: 50%;

                .icon-close{
                    font-size: 35rpx;
                    color:#aaa;
                }
            }

            .img-bg{
                position: absolute;
                top: 0;
                left: 0;
                z-index: 0;
            }

            .neirong{
                z-index: 10;
                display: flex;
                flex-direction: column;
                padding: 0 80rpx;
                /*border: 1rpx solid red;*/

                .each{
                    display: flex;
                    justify-content: center;
                    align-items: center;
                }

                .weixinhao{
                    font-size: 30rpx;
                    color: #000;
                }

                .direc{
                    font-size: 24rpx;
                    color:#666;
                }
            }
        }
    }
</style>