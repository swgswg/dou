<template>
    <view class="edit-address">
        <view style="width: 100%;">
            <addressadd :consignee.sync="consignee" :mobile.sync="mobile" :region.sync="region" :street.sync="street" :status.sync="status"></addressadd>
        </view>
        <view class="flex-between cf border-box" style="height:{{98*px2rpxHeight}}px;margin-top:{{140*px2rpxHeight}}px;padding:0 {{70*px2rpxWidth}}px;">
            <view class="flex-center btn-delete" style="width:{{270*px2rpxWidth}}px;height:{{100*px2rpxHeight}}px;border-radius:{{50*px2rpxHeight}}px;" @tap.stop="deleteAddr">删除</view>
            <view class="flex-center btn-save" style="width:{{270*px2rpxWidth}}px;height:{{100*px2rpxHeight}}px;border-radius:{{50*px2rpxHeight}}px;" @tap.stop="editAddr">保存</view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import {USER_INFO,PX_TO_RPX } from '@/utils/constant';
    import api from '@/utils/api';
    import util from '@/utils/util';
    import tip from '@/utils/tip';
    import AddressAdd from '@/components/address_add';

    let addressId = null;

    export default class MyPage extends wepy.page {
        config = {
            navigationBarTitleText: '编辑地址'
        };

        components = {
            addressadd:AddressAdd,
        };

        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
            consignee:null,
            mobile:null,
            region:null,
            street:null,
            status:0,
        };

        // 在Page和Component共用的生命周期函数
        onLoad(options){
            let px2rpx = wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;

            if(util.isEmpty(options.addressId)){
               tip.error('网络错误');
            } else {
                addressId = options.addressId;
            }
            this.$apply();
        }

        // 只在Page中存在的页面生命周期函数
        async onReady() {
            // 通过地址id获取地址详情
            let res = await api.getAddressId({
                query:{
                    addressId: addressId
                }
            });
            if(res.data.state == 1){
                let addr = res.data.data;
                this.consignee = addr.consignee;
                this.mobile = addr.mobile;
                this.status = addr.status;
                this.region = addr.site.split(' ').slice(0,3);
                this.street = addr.site.split(' ').slice(3).join(' ');
            } else {
                tip.error('网络错误');
            }
            this.$apply();
        };

        methods = {
            // 删除地址
            async deleteAddr(){
                let res = await api.deleteAddress({
                    query:{
                        addressId: addressId
                    }
                });
                if(res.data.state == 1){
                    wx.showToast({
                        title: '删除成功',
                        icon: 'success',
                        mask:true,
                        duration: 1000,
                        success:function() {
                            setTimeout(function() {
                                wepy.redirectTo({
                                    url: '/pages/address_list'
                                })
                            },1000);
                        }
                    });
                } else {
                    tip.error('删除失败');
                }
            },

            // 保存编辑地址
            editAddr(){
                this.$broadcast('saveOrEdit','edit',this.addressId);
            },
        };

    }
</script>

<style lang="less">
    page{
        background-color: #f0f0f0;
    }
    .edit-address{
        display: flex;
        flex-direction: column;
        justify-content: center;
        width: 100%;

        .btn-delete{
           background-color: #d2d2d2;
        }
        .btn-save{
            background-color: #ffd824;
        }
    }
</style>