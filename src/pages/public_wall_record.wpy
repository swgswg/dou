// page-公共墙记录
<style lang="less">
    page{
        background-color: #f0f0f0;
    }

    .public-wall-record{

        .title{
            border-bottom: 1rpx solid #ccc;
        }

        .each{
            border-bottom: 1rpx solid #ccc;
        }

    }
</style>

<template>
    <view class="flex-column-center w-percent100 border-box bgcf public-wall-record" style="padding:{{30*px2rpxHeight}}px {{30*px2rpxWidth}}px 0 {{30*px2rpxWidth}}px;">
        <view class="flex-start w-percent100 f35 c6 title" style="height:{{100*px2rpxHeight}}px;">
            <view class="flex-start w-percent50">时间</view>
            <view class="flex-between w-percent50">
                <view class="flex-center" style="width:40%;">能量值</view>
                <view class="flex-center" >参与人数</view>
            </view>
        </view>
        <view class="flex-center w-percent100" style="height:{{1060*px2rpxHeight}}px;">
            <scroll-view class="flex-column-center" scroll-y bindscrolltolower="scrollToLower">
                <block wx:for="{{recordList}}" wx:for-item="record" wx:key="{{index}}">
                    <view class="flex-start w-percent100 f30 ca each" style="height:{{100*px2rpxHeight}}px;">
                        <view class="flex-start w-percent50">{{record.time}}</view>
                        <view class="flex-between w-percent50">
                            <view class="flex-center" style="width:40%;">{{record.score}}</view>
                            <view class="flex-center">{{record.num}}人</view>
                        </view>
                    </view>
                </block>
                <!--加载更多时动画-->
                <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
                <!--暂无数据显示-->
                <placeholder :show.sync="is_empty" message="暂无发现数据"></placeholder>
            </scroll-view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import {USER_INFO,PX_TO_RPX } from '@/utils/constant';
    import util from '@/utils/util';
    import tip from '@/utils/tip';
    import api from '@/utils/api';
    import BottomLoadMore from "@/components/common/bottomLoadMore";
    import Placeholder from "@/components/common/placeholder";

    let isLastPage = false;
    let page = 1;
    let pageSize = 20;
    let publicWallId = null;

    export default class PublicWallRecord extends wepy.page {
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: '公共墙记录'
        };

        // 声明页面中所引用的组件，或声明组件中所引用的子组件
        components = {
            bottomLoadMore: BottomLoadMore,
            placeholder: Placeholder,
        };

        // 页面所需数据均需在这里声明，可用于模板数据绑定
        data = {
            px2rpxWidth:0,
            px2rpxHeight:0,
            recordList:null,
            showLoading:false,
            is_empty:true,
        };

        // 在Page和Component共用的生命周期函数
        async onLoad(options){
            let px2rpx = await wepy.getStorageSync(PX_TO_RPX);
            this.px2rpxWidth = px2rpx.px2rpxWidth;
            this.px2rpxHeight = px2rpx.px2rpxHeight;
            if(util.isEmpty(options.publicWallId)){
                tip.error('网络错误');
            } else {
                publicWallId = options.publicWallId;
            }
            this.$apply();
        }

        // 只在Page中存在的页面生命周期函数
        onReady() {
            this.getPresentWallallScoreEvent(page,pageSize);
        };

        methods = {
            scrollToLower(){
                if(isLastPage){
                    return;
                }
                this.showLoading = true;
                let page = page;
                let pageSize = pageSize;
                this.getPresentWallallScoreEvent(page,pageSize);
            },
        };

        // 查询公共墙周记录
        async getPresentWallallScoreEvent(mypage,mypageSize){
            let presentWallId = publicWallId;
            // 查询公共墙周记录
            let res = await api.getPresentWallallScore({
                query:{
                    presentWallId: presentWallId,
                    page: mypage,
                    pageSize: mypageSize
                }
            });
            if(res.data.state == 1){
                let data = res.data.data.PageInfo;
                if(util.isEmpty(data.list)){
                    this.is_empty = true;
                } else {
                    this.is_empty = false;
                }
                this.recordList = data.list;
                this.isLastPage = data.isLastPage;
                this.showLoading = false;
                page = mypage;
                pageSize = mypageSize + 20;
            } else {
                tip.error('网络错误');
            }
            this.$apply();
        }
    }
</script>

